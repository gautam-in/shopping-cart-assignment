(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[97977],{903679:function(n,e,a){"use strict";a.r(e),a.d(e,{default:function(){return k}});var s=a(827378),t=a(494616),i=a(25778),o=a(375205),l=a(496704),c=a(824246);var r=a(366990);var p,d={en:{description:"Detect if a click event happened outside of an element. It listens for clicks that occur somewhere in the document.",location:"/docs/data/material/components/click-away-listener/click-away-listener.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Click-away listener</h1><p class="description">Detect if a click event happened outside of an element. It listens for clicks that occur somewhere in the document.</p>\n\n<ul>\n<li>\ud83d\udce6 <a href="/size-snapshot">992 B gzipped</a>.</li>\n<li>\u269b\ufe0f Supports portals</li>\n</ul>\n',{component:"modules/components/ComponentLinkHeader.js",design:!1},'<h2 id="heading-example"><span class="anchor-link" id="example"></span>Example<a aria-labelledby="heading-example" class="anchor-link-style" href="#example" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>For instance, if you need to hide a menu dropdown when people click anywhere else on your page:</p>\n',{demo:"ClickAway.js"},'<p>Notice that the component only accepts one child element.\nYou can find a more advanced demo on the <a href="/material-ui/react-menu/#menulist-composition">Menu documentation section</a>.</p>\n<h2 id="heading-portal"><span class="anchor-link" id="portal"></span>Portal<a aria-labelledby="heading-portal" class="anchor-link-style" href="#portal" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The following demo uses <a href="/material-ui/react-portal/"><code>Portal</code></a> to render the dropdown into a new &quot;subtree&quot; outside of current DOM hierarchy.</p>\n',{demo:"PortalClickAway.js"},'<h2 id="heading-leading-edge"><span class="anchor-link" id="leading-edge"></span>Leading edge<a aria-labelledby="heading-leading-edge" class="anchor-link-style" href="#leading-edge" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>By default, the component responds to the trailing events (click + touch end).\nHowever, you can configure it to respond to the leading events (mouse down + touch start).</p>\n',{demo:"LeadingClickAway.js"},'<blockquote>\n<p>\u26a0\ufe0f In this mode, only interactions on the scrollbar of the document is ignored.</p>\n</blockquote>\n<h2 id="heading-accessibility"><span class="anchor-link" id="accessibility"></span>Accessibility<a aria-labelledby="heading-accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>By default <code>&lt;ClickAwayListener /&gt;</code> will add an <code>onClick</code> handler to its children.\nThis can result in e.g. screen readers announcing the children as clickable.\nHowever, the purpose of the <code>onClick</code> handler is not to make <code>children</code> interactive.</p>\n<p>In order to prevent screen readers from marking non-interactive children as &quot;clickable&quot; add <code>role=&quot;presentation&quot;</code> to the immediate children:</p>\n<pre><code class="language-tsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ClickAwayListener</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>presentation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>non<span class="token operator">-</span>interactive heading<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ClickAwayListern</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<p>This is also required to fix a quirk in NVDA when using Firefox that prevents announcement of alert messages (see <a href="https://github.com/mui/material-ui/issues/29080">mui/material-ui#29080</a>).</p>\n<h2 id="heading-unstyled"><span class="anchor-link" id="unstyled"></span>Unstyled<a aria-labelledby="heading-unstyled" class="anchor-link-style" href="#unstyled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li>\ud83d\udce6 <a href="https://bundlephobia.com/package/@mui/base@latest">981 B gzipped</a></li>\n</ul>\n<p>As the component does not have any styles, it also comes with the Base package.</p>\n<pre><code class="language-js"><span class="token keyword">import</span> ClickAwayListener <span class="token keyword">from</span> <span class="token string">\'@mui/base/ClickAwayListener\'</span><span class="token punctuation">;</span>\n</code></pre>\n','<h2 id="heading-api"><span class="anchor-link" id="api"></span>API<a aria-labelledby="heading-api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/base/api/click-away-listener/"><code>&lt;ClickAwayListener /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Example",level:2,hash:"example",children:[]},{text:"Portal",level:2,hash:"portal",children:[]},{text:"Leading edge",level:2,hash:"leading-edge",children:[]},{text:"Accessibility",level:2,hash:"accessibility",children:[]},{text:"Unstyled",level:2,hash:"unstyled",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"Detect click outside React component",headers:{product:"material-ui",title:"Detect click outside React component",components:["ClickAwayListener"],githubLabel:"component: ClickAwayListener"}},pt:{description:"Detecta se um evento de clique ocorreu fora de um elemento. Ele ouve cliques que ocorrem em algum lugar no documento.",location:"/docs/data/material/components/click-away-listener/click-away-listener-pt.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Observador de Clique (ClickAwayListener)</h1><p class="description">Detecta se um evento de clique ocorreu fora de um elemento. Ele ouve cliques que ocorrem em algum lugar no documento.</p>\n\n<ul>\n<li>\ud83d\udce6 <a href="/size-snapshot">1.5 kB gzipped</a>.</li>\n<li>\u269b\ufe0f Suporte para portais</li>\n</ul>\n<p><a href="/pt/system/palette/">A paleta</a> com fun\xe7\xf5es de estilo.</p>\n<h2 id="heading-example"><span class="anchor-link" id="example"></span>Exemplo<a aria-labelledby="heading-example" class="anchor-link-style" href="#example" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Por exemplo, se voc\xea precisar ocultar um menu quando as pessoas clicarem em qualquer outro lugar da sua p\xe1gina:</p>\n',{demo:"ClickAway.js"},'<p>Observe que o componente aceita apenas um elemento filho. Voc\xea pode encontrar demonstra\xe7\xf5es avan\xe7adas na <a href="/pt/material-ui/react-menu/#menulist-composition">se\xe7\xe3o documenta\xe7\xe3o de menu</a>.</p>\n<h2 id="heading-portal"><span class="anchor-link" id="portal"></span>Portal<a aria-labelledby="heading-portal" class="anchor-link-style" href="#portal" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>A demonstra\xe7\xe3o a seguir usa <a href="/pt/material-ui/react-portal/"><code>Portal</code></a> para renderizar o menu suspenso em uma nova &quot;sub\xe1rvore&quot; fora da hierarquia atual do DOM.</p>\n',{demo:"PortalClickAway.js"},'<h2 id="heading-leading-edge"><span class="anchor-link" id="leading-edge"></span>Eventos<a aria-labelledby="heading-leading-edge" class="anchor-link-style" href="#leading-edge" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Por padr\xe3o, o componente responde aos eventos de clique e de toque final (click + touch end). No entanto, voc\xea pode configur\xe1-lo para responder aos eventos de mouse pressionado e toque inicial (mouse down + touch start).</p>\n',{demo:"LeadingClickAway.js"},'<blockquote>\n<p>\u26a0\ufe0f Neste modo, apenas as intera\xe7\xf5es na barra de rolagem do documento s\xe3o ignoradas.</p>\n</blockquote>\n<h2 id="heading-accessibility"><span class="anchor-link" id="accessibility"></span>Accessibility<a aria-labelledby="heading-accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>By default <code>&lt;ClickAwayListener /&gt;</code> will add an <code>onClick</code> handler to its children. This can result in e.g. screen readers announcing the children as clickable. However, the purpose of the <code>onClick</code> handler is not to make <code>children</code> interactive.</p>\n<p>In order to prevent screen readers from marking non-interactive children as &quot;clickable&quot; add <code>role=&quot;presentation&quot;</code> to the immediate children:</p>\n<pre><code class="language-tsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ClickAwayListener</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>presentation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>non<span class="token operator">-</span>interactive heading<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ClickAwayListern</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<p>This is also required to fix a quirk in NVDA when using FireFox that prevents announcement of alert messages (see <a href="https://github.com/mui-org/material-ui/issues/29080">mui-org/material-ui#29080</a>).</p>\n<h2 id="heading-unstyled"><span class="anchor-link" id="unstyled"></span>Unstyled<a aria-labelledby="heading-unstyled" class="anchor-link-style" href="#unstyled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li>\ud83d\udce6 <a href="https://bundlephobia.com/package/@mui/base@latest">784 B gzipped</a></li>\n</ul>\n<p>As the component does not have any styles, it also comes with the Base package.</p>\n<pre><code class="language-js"><span class="token keyword">import</span> ClickAwayListener <span class="token keyword">from</span> <span class="token string">\'@mui/base/ClickAwayListener\'</span><span class="token punctuation">;</span>\n</code></pre>\n','<h2 id="heading-api"><span class="anchor-link" id="api"></span>API<a aria-labelledby="heading-api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/pt/base/api/click-away-listener/"><code>&lt;ClickAwayListener /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Exemplo",level:2,hash:"example",children:[]},{text:"Portal",level:2,hash:"portal",children:[]},{text:"Eventos",level:2,hash:"leading-edge",children:[]},{text:"Accessibility",level:2,hash:"accessibility",children:[]},{text:"Unstyled",level:2,hash:"unstyled",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"Componente React para Detectar clique fora",headers:{product:"material-ui",title:"Componente React para Detectar clique fora",components:["ClickAwayListener"],githubLabel:"component: ClickAwayListener"}},zh:{description:"\u7528\u4e8e\u68c0\u6d4b\u70b9\u51fb\u4e8b\u4ef6\u662f\u5426\u53d1\u751f\u5728\u5143\u7d20\u4e4b\u5916\u3002 \u5b83\u53ef\u4ee5\u76d1\u542c\u6587\u6863\u4e2d\u67d0\u5904\u53d1\u751f\u7684\u70b9\u51fb\u4e8b\u4ef6\u3002",location:"/docs/data/material/components/click-away-listener/click-away-listener-zh.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Click away listener \u5b83\u5904\u70b9\u51fb\u76d1\u542c\u5668</h1><p class="description">\u7528\u4e8e\u68c0\u6d4b\u70b9\u51fb\u4e8b\u4ef6\u662f\u5426\u53d1\u751f\u5728\u5143\u7d20\u4e4b\u5916\u3002 \u5b83\u53ef\u4ee5\u76d1\u542c\u6587\u6863\u4e2d\u67d0\u5904\u53d1\u751f\u7684\u70b9\u51fb\u4e8b\u4ef6\u3002</p>\n\n<ul>\n<li>\ud83d\udce6 <a href="/size-snapshot">1.5kB \u5df2\u538b\u7f29\u7684\u5305</a>\u3002</li>\n<li>\u269b\ufe0f \u652f\u6301\u4f20\u9001\u95e8\u7ec4\u4ef6</li>\n</ul>\n',{component:"modules/components/ComponentLinkHeader.js",design:!1},'<h2 id="heading-example"><span class="anchor-link" id="example"></span>\u793a\u4f8b<a aria-labelledby="heading-example" class="anchor-link-style" href="#example" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u4f8b\u5982\uff0c\u5f53\u7528\u6237\u5728\u70b9\u51fb\u9875\u9762\u9664\u83dc\u5355\u5916\u7684\u4efb\u4f55\u4e00\u5904\uff0c\u60a8\u53ef\u80fd\u60f3\u9690\u85cf\u4e00\u4e2a\u4e0b\u62c9\u7684\u83dc\u5355\uff1a</p>\n',{demo:"ClickAway.js"},'<p>\u8bf7\u6ce8\u610f\uff0c\u8be5\u7ec4\u4ef6\u4ec5\u63a5\u53d7\u4e00\u4e2a\u5b50\u5143\u7d20\u3002 \u4f60\u53ef\u4ee5\u5728 <a href="/zh/material-ui/react-menu/#menulist-composition">Menu \u7684\u6587\u6863\u7ae0\u8282</a> \u9605\u8bfb\u66f4\u9ad8\u7ea7\u7684\u6837\u4f8b\u3002</p>\n<h2 id="heading-portal"><span class="anchor-link" id="portal"></span>Portal<a aria-labelledby="heading-portal" class="anchor-link-style" href="#portal" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u4e0b\u9762\u7684\u6f14\u793a\u4f7f\u7528 <a href="/zh/material-ui/react-portal/"><code>\u4f20\u9001\u95e8\u7ec4\u4ef6\uff08Portal\uff09</code></a> \u5c06\u4e0b\u62c9\u83dc\u5355\u6e32\u67d3\u5230\u5f53\u524d DOM \u5c42\u6b21\u4e4b\u5916\u7684\u65b0\u7684\u201c\u5b50\u7ea7\u6811\u201d\u3002</p>\n',{demo:"PortalClickAway.js"},'<h2 id="heading-leading-edge"><span class="anchor-link" id="leading-edge"></span>\u524d\u7aef\uff08Leading edge\uff09<a aria-labelledby="heading-leading-edge" class="anchor-link-style" href="#leading-edge" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7ec4\u4ef6\u54cd\u5e94\u4e86\u5c3e\u968f\u4e8b\u4ef6\uff08trailing events\uff09\uff08\u70b9\u51fb + \u89e6\u6478\u7ed3\u675f\uff09\u3002 \u7136\u800c\uff0c\u60a8\u53ef\u4ee5\u914d\u7f6e\u5b83\u6765\u56de\u5e94\u4e00\u4e9b\u4e3b\u8981\u7684\u4e8b\u4ef6\uff08leading events\uff09\uff08\u9f20\u6807\u6309\u4e0b + \u89e6\u6478\u5f00\u59cb\uff09\u3002</p>\n',{demo:"LeadingClickAway.js"},'<blockquote>\n<p>\u26a0\ufe0f \u5728\u6b64\u6a21\u5f0f\u4e0b\uff0c\u4ec5\u6709\u6587\u6863\u5bf9\u8c61\u6eda\u52a8\u6761\u4e0a\u7684\u4ea4\u4e92\u88ab\u5ffd\u7565\u3002</p>\n</blockquote>\n<h2 id="heading-accessibility"><span class="anchor-link" id="accessibility"></span>Accessibility<a aria-labelledby="heading-accessibility" class="anchor-link-style" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>By default <code>&lt;ClickAwayListener /&gt;</code> will add an <code>onClick</code> handler to its children. This can result in e.g. screen readers announcing the children as clickable. However, the purpose of the <code>onClick</code> handler is not to make <code>children</code> interactive. \u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4f8b\u5982\u5c4f\u5e55\u9605\u8bfb\u5668\u5ba3\u5e03\u5176\u5b50\u5143\u7d20\u53ef\u4ee5\u70b9\u51fb\u3002 \u7136\u800c\uff0c <code>onClick</code> \u5904\u7406\u7a0b\u5e8f\u7684\u76ee\u7684\u4e0d\u662f\u8981\u8ba9 <code>\u5b50\u5143\u7d20</code> \u53ef\u4ea4\u4e92\u3002</p>\n<p>In order to prevent screen readers from marking non-interactive children as &quot;clickable&quot; add <code>role=&quot;presentation&quot;</code> to the immediate children:</p>\n<pre><code class="language-tsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ClickAwayListener</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>presentation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>non<span class="token operator">-</span>interactive heading<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ClickAwayListern</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<p>This is also required to fix a quirk in NVDA when using FireFox that prevents announcement of alert messages (see <a href="https://github.com/mui-org/material-ui/issues/29080">mui-org/material-ui#29080</a>).</p>\n<h2 id="heading-unstyled"><span class="anchor-link" id="unstyled"></span>Unstyled<a aria-labelledby="heading-unstyled" class="anchor-link-style" href="#unstyled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li>\ud83d\udce6 <a href="https://bundlephobia.com/package/@mui/base@latest">784 B gzipped</a></li>\n</ul>\n<p>As the component does not have any styles, it also comes with the Base package.</p>\n<pre><code class="language-js"><span class="token keyword">import</span> ClickAwayListener <span class="token keyword">from</span> <span class="token string">\'@mui/base/ClickAwayListener\'</span><span class="token punctuation">;</span>\n</code></pre>\n','<h2 id="heading-api"><span class="anchor-link" id="api"></span>API<a aria-labelledby="heading-api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/zh/base/api/click-away-listener/"><code>&lt;ClickAwayListener /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"\u793a\u4f8b",level:2,hash:"example",children:[]},{text:"Portal",level:2,hash:"portal",children:[]},{text:"\u524d\u7aef\uff08Leading edge\uff09",level:2,hash:"leading-edge",children:[]},{text:"Accessibility",level:2,hash:"accessibility",children:[]},{text:"Unstyled",level:2,hash:"unstyled",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"React Detect click outside\uff08\u5b83\u5904\u70b9\u51fb\u76d1\u542c\u5668\uff09\u7ec4\u4ef6",headers:{product:"material-ui",title:"React Detect click outside\uff08\u5b83\u5904\u70b9\u51fb\u76d1\u542c\u5668\uff09\u7ec4\u4ef6",components:["ClickAwayListener"],githubLabel:"component: ClickAwayListener"}}},u={"ClickAway.js":{module:"./ClickAway.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\n\nexport default function ClickAway() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  const styles = {\n    position: 'absolute',\n    top: 28,\n    right: 0,\n    left: 0,\n    zIndex: 1,\n    border: '1px solid',\n    p: 1,\n    bgcolor: 'background.paper',\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <Box sx={{ position: 'relative' }}>\n        <button type=\"button\" onClick={handleClick}>\n          Open menu dropdown\n        </button>\n        {open ? (\n          <Box sx={styles}>\n            Click me, I will stay visible until you click outside.\n          </Box>\n        ) : null}\n      </Box>\n    </ClickAwayListener>\n  );\n}\n",jsxPreview:"<ClickAwayListener onClickAway={handleClickAway}>\n  <Box sx={{ position: 'relative' }}>\n    <button type=\"button\" onClick={handleClick}>\n      Open menu dropdown\n    </button>\n    {open ? (\n      <Box sx={styles}>\n        Click me, I will stay visible until you click outside.\n      </Box>\n    ) : null}\n  </Box>\n</ClickAwayListener>",moduleTS:"./ClickAway.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { SxProps } from '@mui/system';\n\nexport default function ClickAway() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  const styles: SxProps = {\n    position: 'absolute',\n    top: 28,\n    right: 0,\n    left: 0,\n    zIndex: 1,\n    border: '1px solid',\n    p: 1,\n    bgcolor: 'background.paper',\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <Box sx={{ position: 'relative' }}>\n        <button type=\"button\" onClick={handleClick}>\n          Open menu dropdown\n        </button>\n        {open ? (\n          <Box sx={styles}>\n            Click me, I will stay visible until you click outside.\n          </Box>\n        ) : null}\n      </Box>\n    </ClickAwayListener>\n  );\n}\n"},"PortalClickAway.js":{module:"./PortalClickAway.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Portal from '@mui/material/Portal';\n\nexport default function PortalClickAway() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  const styles = {\n    position: 'fixed',\n    width: 200,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    border: '1px solid',\n    p: 1,\n    bgcolor: 'background.paper',\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <div>\n        <button type=\"button\" onClick={handleClick}>\n          Open menu dropdown\n        </button>\n        {open ? (\n          <Portal>\n            <Box sx={styles}>\n              Click me, I will stay visible until you click outside.\n            </Box>\n          </Portal>\n        ) : null}\n      </div>\n    </ClickAwayListener>\n  );\n}\n",jsxPreview:'<ClickAwayListener onClickAway={handleClickAway}>\n  <div>\n    <button type="button" onClick={handleClick}>\n      Open menu dropdown\n    </button>\n    {open ? (\n      <Portal>\n        <Box sx={styles}>\n          Click me, I will stay visible until you click outside.\n        </Box>\n      </Portal>\n    ) : null}\n  </div>\n</ClickAwayListener>',moduleTS:"./PortalClickAway.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Portal from '@mui/material/Portal';\nimport { SxProps } from '@mui/system';\n\nexport default function PortalClickAway() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  const styles: SxProps = {\n    position: 'fixed',\n    width: 200,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    border: '1px solid',\n    p: 1,\n    bgcolor: 'background.paper',\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <div>\n        <button type=\"button\" onClick={handleClick}>\n          Open menu dropdown\n        </button>\n        {open ? (\n          <Portal>\n            <Box sx={styles}>\n              Click me, I will stay visible until you click outside.\n            </Box>\n          </Portal>\n        ) : null}\n      </div>\n    </ClickAwayListener>\n  );\n}\n"},"LeadingClickAway.js":{module:"./LeadingClickAway.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\n\nexport default function LeadingClickAway() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  const styles = {\n    position: 'absolute',\n    top: 28,\n    right: 0,\n    left: 0,\n    zIndex: 1,\n    border: '1px solid',\n    p: 1,\n    bgcolor: 'background.paper',\n  };\n\n  return (\n    <ClickAwayListener\n      mouseEvent=\"onMouseDown\"\n      touchEvent=\"onTouchStart\"\n      onClickAway={handleClickAway}\n    >\n      <Box sx={{ position: 'relative' }}>\n        <button type=\"button\" onClick={handleClick}>\n          Open menu dropdown\n        </button>\n        {open ? (\n          <Box sx={styles}>\n            Click me, I will stay visible until you click outside.\n          </Box>\n        ) : null}\n      </Box>\n    </ClickAwayListener>\n  );\n}\n",jsxPreview:'<ClickAwayListener\n  mouseEvent="onMouseDown"\n  touchEvent="onTouchStart"\n  onClickAway={handleClickAway}\n>\n  <Box sx={{ position: \'relative\' }}>\n    <button type="button" onClick={handleClick}>\n      Open menu dropdown\n    </button>\n    {open ? (\n      <Box sx={styles}>\n        Click me, I will stay visible until you click outside.\n      </Box>\n    ) : null}\n  </Box>\n</ClickAwayListener>',moduleTS:"./LeadingClickAway.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { SxProps } from '@mui/system';\n\nexport default function LeadingClickAway() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  const styles: SxProps = {\n    position: 'absolute',\n    top: 28,\n    right: 0,\n    left: 0,\n    zIndex: 1,\n    border: '1px solid',\n    p: 1,\n    bgcolor: 'background.paper',\n  };\n\n  return (\n    <ClickAwayListener\n      mouseEvent=\"onMouseDown\"\n      touchEvent=\"onTouchStart\"\n      onClickAway={handleClickAway}\n    >\n      <Box sx={{ position: 'relative' }}>\n        <button type=\"button\" onClick={handleClick}>\n          Open menu dropdown\n        </button>\n        {open ? (\n          <Box sx={styles}>\n            Click me, I will stay visible until you click outside.\n          </Box>\n        ) : null}\n      </Box>\n    </ClickAwayListener>\n  );\n}\n"}},h={"./ClickAway.js":function(){var n=s.useState(!1),e=(0,i.Z)(n,2),a=e[0],t=e[1];return(0,c.jsx)(l.Z,{onClickAway:function(){t(!1)},children:(0,c.jsxs)(o.Z,{sx:{position:"relative"},children:[(0,c.jsx)("button",{type:"button",onClick:function(){t((function(n){return!n}))},children:"Open menu dropdown"}),a?(0,c.jsx)(o.Z,{sx:{position:"absolute",top:28,right:0,left:0,zIndex:1,border:"1px solid",p:1,bgcolor:"background.paper"},children:"Click me, I will stay visible until you click outside."}):null]})})},"./PortalClickAway.js":function(){var n=s.useState(!1),e=(0,i.Z)(n,2),a=e[0],t=e[1];return(0,c.jsx)(l.Z,{onClickAway:function(){t(!1)},children:(0,c.jsxs)("div",{children:[(0,c.jsx)("button",{type:"button",onClick:function(){t((function(n){return!n}))},children:"Open menu dropdown"}),a?(0,c.jsx)(r.Z,{children:(0,c.jsx)(o.Z,{sx:{position:"fixed",width:200,top:"50%",left:"50%",transform:"translate(-50%, -50%)",border:"1px solid",p:1,bgcolor:"background.paper"},children:"Click me, I will stay visible until you click outside."})}):null]})})},"./LeadingClickAway.js":function(){var n=s.useState(!1),e=(0,i.Z)(n,2),a=e[0],t=e[1];return(0,c.jsx)(l.Z,{mouseEvent:"onMouseDown",touchEvent:"onTouchStart",onClickAway:function(){t(!1)},children:(0,c.jsxs)(o.Z,{sx:{position:"relative"},children:[(0,c.jsx)("button",{type:"button",onClick:function(){t((function(n){return!n}))},children:"Open menu dropdown"}),a?(0,c.jsx)(o.Z,{sx:{position:"absolute",top:28,right:0,left:0,zIndex:1,border:"1px solid",p:1,bgcolor:"background.paper"},children:"Click me, I will stay visible until you click outside."}):null]})})}};function k(){return p||(p=(0,c.jsx)(t.Z,{demos:u,docs:d,demoComponents:h}))}},566203:function(n,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/react-click-away-listener",function(){return a(903679)}])}},function(n){n.O(0,[64631,31194,72773,31659,16950,37141,91895,63463,61980,45387,892,2798,30170,20365,60630,25747,18049,26035,85244,67414,90478,30016,94616,49774,92888,40179],(function(){return e=566203,n(n.s=e);var e}));var e=n.O();_N_E=e}]);