"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[40367],{340367:function(n,a,s){s.d(a,{rx:function(){return e},DE:function(){return t},hD:function(){return p}});var e={en:{description:"Configure classname generation at build time.",location:"/docs/data/material/experimental-api/classname-generator/classname-generator.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>ClassName generator</h1><p class="description">Configure classname generation at build time.</p>\n\n<p>This API is introduced in <code>@mui/material</code> (v5.0.5) as a replacement of deprecated <a href="/system/styles/api/#creategenerateclassname-options-class-name-generator"><code>createGenerateClassName</code></a>.</p>\n<blockquote>\n<p>\u26a0\ufe0f <strong>Note</strong>: this API is at an unstable stage which might change in the future.</p>\n</blockquote>\n<h2 id="heading-global-classname-prefix"><span class="anchor-link" id="global-classname-prefix"></span>Global classname prefix<a aria-labelledby="heading-global-classname-prefix" class="anchor-link-style" href="#global-classname-prefix" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>By default, MUI generates a global classname for each component slot. For example:</p>\n<pre><code class="language-js"><span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@mui/material/Button\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>Generates the following HTML:</p>\n<pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root css-1ujsas3<span class="token punctuation">"</span></span>\n<span class="token punctuation">></span></span>\n  Button\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>To add prefix to all class names generated by the MUI components, pass a callback to <code>ClassNameGenerator.configure(callback)</code>.</p>\n<pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> unstable_ClassNameGenerator <span class="token keyword">as</span> ClassNameGenerator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/className\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// call this function at the root of the application and before any MUI components import</span>\nClassNameGenerator<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">componentName</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">foo-bar-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>componentName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>As a result, the HTML result changes to the following:</p>\n<pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>foo-bar-MuiButton-root foo-bar-MuiButton-text foo-bar-MuiButton-textPrimary foo-bar-MuiButton-sizeMedium foo-bar-MuiButton-textSizeMedium foo-bar-MuiButtonBase-root css-1ujsas3<span class="token punctuation">"</span></span>\n<span class="token punctuation">></span></span>\n  Button\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n</code></pre>\n<h2 id="heading-component-renaming"><span class="anchor-link" id="component-renaming"></span>Component renaming<a aria-labelledby="heading-component-renaming" class="anchor-link-style" href="#component-renaming" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Every MUI component has <code>${componentName}-${slot}</code> classname format. For example, the component name of <a href="/material-ui/react-chip/"><code>Chip</code></a> is <code>MuiChip</code>, which is used as a global class name for every <code>&lt;Chip /&gt;</code> element. You can remove/change the <code>Mui</code> prefix as follows:</p>\n<pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> unstable_ClassNameGenerator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/className\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// call this function at the root of the application</span>\nunstable_ClassNameGenerator<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">componentName</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n  componentName<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">\'Mui\'</span><span class="token punctuation">,</span> <span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>Now, the <code>Mui</code> class is gone.</p>\n<pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Chip-root Chip-filled Chip-sizeMedium Chip-colorDefault Chip-filledDefault css-mttbc0<span class="token punctuation">"</span></span>\n<span class="token punctuation">></span></span>\n  Chip\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre>\n<blockquote>\n<p><strong>Note</strong>: <a href="/material-ui/customization/how-to-customize/#state-classes">state classes</a> are <strong>NOT</strong> component names and therefore cannot be changed/removed.</p>\n</blockquote>\n<h2 id="heading-caveat"><span class="anchor-link" id="caveat"></span>Caveat<a aria-labelledby="heading-caveat" class="anchor-link-style" href="#caveat" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><p><code>ClassNameGenerator.configure</code> must be called before any MUI components import.</p>\n</li>\n<li><p>you should always use <code>[component]Classes</code> for theming/customization to get the correct generated class name.</p>\n<pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { outlinedInputClasses } from \'@mui/material/OutlinedInput\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span><span class="token prefix unchanged"> </span><span class="token line">  components: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    MuiOutlinedInput: {\n</span><span class="token prefix unchanged"> </span><span class="token line">      styleOverrides: {\n</span><span class="token prefix unchanged"> </span><span class="token line">        root: {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">          \'&amp; .MuiOutlinedInput-notchedOutline\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">          // the result will contain the prefix.\n</span><span class="token prefix inserted">+</span><span class="token line">          [`&amp; .${outlinedInputClasses.notchedOutline}`]: {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">            borderWidth: 1,\n</span><span class="token prefix unchanged"> </span><span class="token line">          }\n</span><span class="token prefix unchanged"> </span><span class="token line">        }\n</span><span class="token prefix unchanged"> </span><span class="token line">      }\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span><span class="token prefix unchanged"> </span><span class="token line">  }\n</span><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre>\n</li>\n<li><p>This API should only be used at build-time.</p>\n</li>\n<li><p>The configuration is applied to all of the components across the application. You cannot target a specific part of the application.</p>\n</li>\n</ul>\n<h2 id="heading-framework-example"><span class="anchor-link" id="framework-example"></span>Framework example<a aria-labelledby="heading-framework-example" class="anchor-link-style" href="#framework-example" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>In some cases, you might need to add <code>/* eslint-disable import/first */</code> at the top of <code>ClassNameGenerator</code> import.</p>\n<pre><code class="language-js"><span class="token comment">/* eslint-disable import/first */</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> unstable_ClassNameGenerator <span class="token keyword">as</span> ClassNameGenerator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/className\'</span><span class="token punctuation">;</span>\n</code></pre>\n<h3 id="heading-next-js"><span class="anchor-link" id="next-js"></span>Next.js<a aria-labelledby="heading-next-js" class="anchor-link-style" href="#next-js" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Use ClassNameGenerator in <code>/pages/_app.js</code>.</p>\n<pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { unstable_ClassNameGenerator as ClassNameGenerator } from \'@mui/material/className\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">ClassNameGenerator.configure((componentName) => componentName.replace(\'Mui\', \'\'));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import PropTypes from \'prop-types\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import Head from \'next/head\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default function MyApp(props) {\n</span><span class="token prefix unchanged"> </span><span class="token line">  const { Component, pageProps } = props;\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;Component {...pageProps} />\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre>\n<h3 id="heading-create-react-app"><span class="anchor-link" id="create-react-app"></span>Create React App<a aria-labelledby="heading-create-react-app" class="anchor-link-style" href="#create-react-app" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Use ClassNameGenerator in <code>/src/index.js</code>.</p>\n<pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { unstable_ClassNameGenerator as ClassNameGenerator } from \'@mui/material/className\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">ClassNameGenerator.configure((componentName) => componentName.replace(\'Mui\', \'\'));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import ReactDOM from \'react-dom\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import App from \'./App\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">ReactDOM.render(&lt;App />);</span></span>\n</code></pre>\n<h3 id="heading-gatsby"><span class="anchor-link" id="gatsby"></span>Gatsby<a aria-labelledby="heading-gatsby" class="anchor-link-style" href="#gatsby" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Use ClassNameGenerator in <code>gatsby-ssr.js</code> at the root folder.</p>\n<pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { unstable_ClassNameGenerator as ClassNameGenerator } from "@mui/material/className";\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">ClassNameGenerator.configure((componentName) => componentName.replace(\'Mui\', \'\'));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export const wrapPageElement = ({ element }) => {\n</span><span class="token prefix unchanged"> </span><span class="token line">  return element;\n</span><span class="token prefix unchanged"> </span><span class="token line">};</span></span>\n</code></pre>\n'],toc:[{text:"Global classname prefix",level:2,hash:"global-classname-prefix",children:[]},{text:"Component renaming",level:2,hash:"component-renaming",children:[]},{text:"Caveat",level:2,hash:"caveat",children:[]},{text:"Framework example",level:2,hash:"framework-example",children:[{text:"Next.js",level:3,hash:"next-js"},{text:"Create React App",level:3,hash:"create-react-app"},{text:"Gatsby",level:3,hash:"gatsby"}]}],title:"ClassName generator",headers:{components:[]}},pt:{description:"Configure classname generation at build time.",location:"/docs/data/material/experimental-api/classname-generator/classname-generator-pt.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>ClassName generator</h1><p class="description">Configure classname generation at build time.</p>\n\n<p>This API is introduced in <code>@mui/material</code> (v5.0.5) as a replacement of deprecated <a href="/pt/system/styles/api/#creategenerateclassname-options-class-name-generator"><code>createGenerateClassName</code></a>.</p>\n<blockquote>\n<p>\u26a0\ufe0f <strong>Note</strong>: this API is at an unstable stage which might change in the future.</p>\n</blockquote>\n<h2 id="heading-global-classname-prefix"><span class="anchor-link" id="global-classname-prefix"></span>Global classname prefix<a aria-labelledby="heading-global-classname-prefix" class="anchor-link-style" href="#global-classname-prefix" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>By default, MUI generates a global classname for each component slot. For example:</p>\n<pre><code class="language-js"><span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@mui/material/Button\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>Generates the following HTML:</p>\n<pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root css-1ujsas3<span class="token punctuation">"</span></span>\n<span class="token punctuation">></span></span>\n  Button\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>To add prefix to all class names generated by the MUI components, pass a callback to <code>ClassNameGenerator.configure(callback)</code>.</p>\n<pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> unstable_ClassNameGenerator <span class="token keyword">as</span> ClassNameGenerator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/utils\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// call this function at the root of the application and before any MUI components import ClassNameGenerator.configure((componentName) => `foo-bar-${componentName}`);</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>As a result, the HTML result changes to the following:</p>\n<pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>foo-bar-MuiButton-root foo-bar-MuiButton-text foo-bar-MuiButton-textPrimary foo-bar-MuiButton-sizeMedium foo-bar-MuiButton-textSizeMedium foo-bar-MuiButtonBase-root css-1ujsas3<span class="token punctuation">"</span></span>\n<span class="token punctuation">></span></span>\n  Button\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n</code></pre>\n<h2 id="heading-component-renaming"><span class="anchor-link" id="component-renaming"></span>Component renaming<a aria-labelledby="heading-component-renaming" class="anchor-link-style" href="#component-renaming" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Every MUI component has <code>${componentName}-${slot}</code> classname format. For example, the component name of <a href="/pt/material-ui/react-chip/"><code>Chip</code></a> is <code>MuiChip</code>, which is used as a global class name for every <code>&lt;Chip /&gt;</code> element. You can remove/change the <code>Mui</code> prefix as follows:</p>\n<pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> unstable_ClassNameGenerator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/utils\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// call this function at the root of the application</span>\nunstable_ClassNameGenerator<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">componentName</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n  componentName<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">\'Mui\'</span><span class="token punctuation">,</span> <span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>Now, the <code>Mui</code> class is gone.</p>\n<pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Chip-root Chip-filled Chip-sizeMedium Chip-colorDefault Chip-filledDefault css-mttbc0<span class="token punctuation">"</span></span>\n<span class="token punctuation">></span></span>\n  Chip\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre>\n<blockquote>\n<p><strong>Note</strong>: <a href="/pt/material-ui/customization/how-to-customize/#state-classes">state classes</a> are <strong>NOT</strong> component names and therefore cannot be changed/removed.</p>\n</blockquote>\n<h2 id="heading-caveat"><span class="anchor-link" id="caveat"></span>Caveat<a aria-labelledby="heading-caveat" class="anchor-link-style" href="#caveat" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><p><code>ClassNameGenerator.configure</code> must be called before any MUI components import.</p>\n</li>\n<li><p>you should always use <code>[component]Classes</code> for theming/customization to get the correct generated class name.</p>\n<pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { outlinedInputClasses } from \'@mui/material/OutlinedInput\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span><span class="token prefix unchanged"> </span><span class="token line">  components: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    MuiOutlinedInput: {\n</span><span class="token prefix unchanged"> </span><span class="token line">      styleOverrides: {\n</span><span class="token prefix unchanged"> </span><span class="token line">        root: {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">          \'&amp; . MuiOutlinedInput-notchedOutline\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">          // the result will contain the prefix.\n</span><span class="token prefix inserted">+</span><span class="token line">          [`&amp; .${outlinedInputClasses.notchedOutline}`]: {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">            borderWidth: 1,\n</span><span class="token prefix unchanged"> </span><span class="token line">          }\n</span><span class="token prefix unchanged"> </span><span class="token line">        }\n</span><span class="token prefix unchanged"> </span><span class="token line">      }\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span><span class="token prefix unchanged"> </span><span class="token line">  }\n</span><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre>\n</li>\n<li><p>This API should only be used at build-time.</p>\n</li>\n<li><p>The configuration is applied to all of the components across the application. You cannot target a specific part of the application.</p>\n</li>\n</ul>\n<h2 id="heading-framework-example"><span class="anchor-link" id="framework-example"></span>Framework example<a aria-labelledby="heading-framework-example" class="anchor-link-style" href="#framework-example" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>In some cases, you might need to add <code>/* eslint-disable import/first */</code> at the top of <code>ClassNameGenerator</code> import.</p>\n<pre><code class="language-js"><span class="token comment">/* eslint-disable import/first */</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> unstable_ClassNameGenerator <span class="token keyword">as</span> ClassNameGenerator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/utils\'</span><span class="token punctuation">;</span>\n</code></pre>\n<h3 id="heading-next-js"><span class="anchor-link" id="next-js"></span>Next.js<a aria-labelledby="heading-next-js" class="anchor-link-style" href="#next-js" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Use ClassNameGenerator in <code>/pages/_app.js</code>.</p>\n<pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { unstable_ClassNameGenerator as ClassNameGenerator } from \'@mui/material/utils\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">ClassNameGenerator.configure((componentName) => componentName.replace(\'Mui\', \'\'));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import PropTypes from \'prop-types\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import Head from \'next/head\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default function MyApp(props) {\n</span><span class="token prefix unchanged"> </span><span class="token line">  const { Component, pageProps } = props;\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;Component {...pageProps} />\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre>\n<h3 id="heading-create-react-app"><span class="anchor-link" id="create-react-app"></span>Create React App<a aria-labelledby="heading-create-react-app" class="anchor-link-style" href="#create-react-app" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Use ClassNameGenerator in <code>/src/index.js</code>.</p>\n<pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { unstable_ClassNameGenerator as ClassNameGenerator } from \'@mui/material/utils\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">ClassNameGenerator.configure((componentName) => componentName.replace(\'Mui\', \'\'));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import ReactDOM from \'react-dom\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import App from \'./App\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">ReactDOM.render(&lt;App />);</span></span>\n</code></pre>\n<h3 id="heading-gatsby"><span class="anchor-link" id="gatsby"></span>Gatsby<a aria-labelledby="heading-gatsby" class="anchor-link-style" href="#gatsby" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Use ClassNameGenerator in <code>gatsby-ssr.js</code> at the root folder.</p>\n<pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { unstable_ClassNameGenerator as ClassNameGenerator } from "@mui/material/utils";\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">ClassNameGenerator.configure((componentName) => componentName.replace(\'Mui\', \'\'));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export const wrapPageElement = ({ element }) => {\n</span><span class="token prefix unchanged"> </span><span class="token line">  return element;\n</span><span class="token prefix unchanged"> </span><span class="token line">};</span></span>\n</code></pre>\n'],toc:[{text:"Global classname prefix",level:2,hash:"global-classname-prefix",children:[]},{text:"Component renaming",level:2,hash:"component-renaming",children:[]},{text:"Caveat",level:2,hash:"caveat",children:[]},{text:"Framework example",level:2,hash:"framework-example",children:[{text:"Next.js",level:3,hash:"next-js"},{text:"Create React App",level:3,hash:"create-react-app"},{text:"Gatsby",level:3,hash:"gatsby"}]}],title:"ClassName generator",headers:{components:[]}},zh:{description:"\u5728\u6784\u5efa\u65f6\u914d\u7f6e\u7c7b\u540d\u751f\u6210",location:"/docs/data/material/experimental-api/classname-generator/classname-generator-zh.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>\u7c7b\u540d\u751f\u6210\u5668</h1><p class="description">\u5728\u6784\u5efa\u65f6\u914d\u7f6e\u7c7b\u540d\u751f\u6210</p>\n\n<p>\u8fd9\u4e2a API \u5728 <code>@mui/material</code> (v5.0.5) \u4e2d\u5f15\u5165\uff0c\u4f5c\u4e3a\u5df2\u5f03\u7528<a href="/zh/system/styles/api/#creategenerateclassname-options-class-name-generator"><code>createGenerateClassName</code></a>\u7684\u66ff\u4ee3\u54c1</p>\n<blockquote>\n<p>\u26a0\ufe0f <strong>\u6ce8\u610f</strong>: \u8fd9\u4e2a API \u5904\u4e8e\u4e0d\u7a33\u5b9a\u9636\u6bb5\uff0c\u5c06\u6765\u53ef\u80fd\u53d1\u751f\u53d8\u5316\u3002</p>\n</blockquote>\n<h2 id="heading-global-classname-prefix"><span class="anchor-link" id="global-classname-prefix"></span>\u5168\u5c40\u7c7b\u540d\u524d\u7f00<a aria-labelledby="heading-global-classname-prefix" class="anchor-link-style" href="#global-classname-prefix" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c MUI \u4e3a\u6bcf\u4e2a\u7ec4\u4ef6\u63d2\u69fd\u751f\u6210\u4e00\u4e2a\u5168\u5c40\u7c7b\u540d\u3002 \u4f8b\u5982:</p>\n<pre><code class="language-js"><span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@mui/material/Button\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>\u751f\u6210\u4ee5\u4e0b HTML\uff1a</p>\n<pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root css-1ujsas3<span class="token punctuation">"</span></span>\n<span class="token punctuation">></span></span>\n  Button\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>\u4f7f\u7528 <code>ClassNameGenerator.configure(callback)</code> \u56de\u8c03\u51fd\u6570\uff0c\u53ef\u4e3a MUI \u6240\u6709\u751f\u6210\u7ec4\u4ef6\u7c7b\u540d\u6dfb\u52a0\u524d\u7f00\u3002</p>\n<pre><code class="language-js"><span class="token operator">+</span><span class="token keyword">import</span> <span class="token punctuation">{</span> outlinedInputClasses <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/OutlinedInput\'</span><span class="token punctuation">;</span>\n\n   <span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n     <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n       <span class="token literal-property property">MuiOutlinedInput</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n         <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n           <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token operator">-</span>          <span class="token string">\'&amp; .MuiOutlinedInput-notchedOutline\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token operator">+</span>          <span class="token comment">// the result will contain the prefix.</span>\n  <span class="token operator">+</span>          <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&amp; .</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>outlinedInputClasses<span class="token punctuation">.</span>notchedOutline<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n               <span class="token literal-property property">borderWidth</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n             <span class="token punctuation">}</span>\n           <span class="token punctuation">}</span>\n         <span class="token punctuation">}</span>\n       <span class="token punctuation">}</span>\n     <span class="token punctuation">}</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<p>\u8fd4\u56de HTML \u7ed3\u679c</p>\n<pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>foo-bar-MuiButton-root foo-bar-MuiButton-text foo-bar-MuiButton-textPrimary foo-bar-MuiButton-sizeMedium foo-bar-MuiButton-textSizeMedium foo-bar-MuiButtonBase-root css-1ujsas3<span class="token punctuation">"</span></span>\n<span class="token punctuation">></span></span>\n  Button\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n</code></pre>\n<h2 id="heading-component-renaming"><span class="anchor-link" id="component-renaming"></span>\u7ec4\u4ef6\u66f4\u540d<a aria-labelledby="heading-component-renaming" class="anchor-link-style" href="#component-renaming" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u6bcf\u4e2a MUI \u7ec4\u4ef6\u90fd\u6709 <code>${componentName}-${slot}</code> \u7c7b\u540d\u79f0\u683c\u5f0f\u3002 \u4f8b\u5982\uff0c <a href="/zh/material-ui/react-chip/"><code>Chip</code></a> \u7684\u7ec4\u4ef6\u540d\u79f0\u4e3a <code>MuiChip</code>, \u5b83\u88ab\u7528\u4f5c\u6bcf\u4e00\u4e2a <code>&lt;Chip /&gt;</code> \u5143\u7d20\u7684\u5168\u5c40\u7c7b\u540d\u79f0\u3002 \u60a8\u53ef\u4ee5\u5220\u9664/\u66f4\u6539 <code>Mui</code> \u524d\u7f00\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p>\n<pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> unstable_ClassNameGenerator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/utils\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// \u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u6839\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570</span>\nunstable_ClassNameGenerator<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">componentName</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n  componentName<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">\'Mui\'</span><span class="token punctuation">,</span> <span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>\u73b0\u5728\uff0c <code>Mui</code> \u7c7b\u5df2\u7ecf\u7ed3\u675f\u3002</p>\n<pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Chip-root Chip-filled Chip-sizeMedium Chip-colorDefault Chip-filledDefault css-mttbc0<span class="token punctuation">"</span></span>\n<span class="token punctuation">></span></span>\n  Chip\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre>\n<blockquote>\n<p><strong>\u6ce8\uff1a</strong> <a href="/zh/material-ui/customization/how-to-customize/#state-classes">\u72b6\u6001\u7c7b</a><strong>\u4e0d\u662f</strong>\u7ec4\u4ef6\u540d\u79f0\uff0c\u56e0\u6b64\u4e0d\u80fd\u66f4\u6539/\u5220\u9664</p>\n</blockquote>\n<h2 id="heading-caveat"><span class="anchor-link" id="caveat"></span>\u6ce8\u610f\u4e8b\u9879<a aria-labelledby="heading-caveat" class="anchor-link-style" href="#caveat" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><p><code>ClassNameGenerator.configure</code> must be called before any MUI components import.</p>\n</li>\n<li><p>\u60a8\u5e94\u8be5\u59cb\u7ec8\u4f7f\u7528 <code>[component]\u7c7b</code> \u8fdb\u884c\u4e3b\u9898\u5316/\u81ea\u5b9a\u4e49\u4ee5\u83b7\u5f97\u6b63\u786e\u7684\u751f\u6210\u7c7b\u540d\u79f0\u3002</p>\n<pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { outlinedInputClasses } from \'@mui/material/OutlinedInput\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const theme = createTheme({\n</span><span class="token prefix unchanged"> </span><span class="token line">  components: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    MuiOutlinedInput: {\n</span><span class="token prefix unchanged"> </span><span class="token line">      styleOverrides: {\n</span><span class="token prefix unchanged"> </span><span class="token line">        root: {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">          \'&amp; .MuiOutlinedInput-notchedOutline\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">          // the result will contain the prefix.\n</span><span class="token prefix inserted">+</span><span class="token line">          [`&amp; .${outlinedInputClasses.notchedOutline}`]: {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">            borderWidth: 1,\n</span><span class="token prefix unchanged"> </span><span class="token line">          }\n</span><span class="token prefix unchanged"> </span><span class="token line">        }\n</span><span class="token prefix unchanged"> </span><span class="token line">      }\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span><span class="token prefix unchanged"> </span><span class="token line">  }\n</span><span class="token prefix unchanged"> </span><span class="token line">});\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">          [`&amp; .${outlinedInputClasses.notchedOutline}`]: {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">            borderWidth: 1,\n</span><span class="token prefix unchanged"> </span><span class="token line">          }\n</span><span class="token prefix unchanged"> </span><span class="token line">        }\n</span><span class="token prefix unchanged"> </span><span class="token line">      }\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span><span class="token prefix unchanged"> </span><span class="token line">  }\n</span><span class="token prefix unchanged"> </span><span class="token line">});</span></span>\n</code></pre>\n</li>\n<li><p>\u6b64 API \u53ea\u80fd\u5728\u6784\u5efa\u65f6\u4f7f\u7528\u3002</p>\n</li>\n<li><p>\u8be5\u914d\u7f6e\u5e94\u7528\u4e8e\u6574\u4e2a\u7a0b\u5e8f\u7684\u6240\u6709\u7ec4\u4ef6\u3002 \u60a8\u4e0d\u80fd\u9488\u5bf9\u5e94\u7528\u7a0b\u5e8f\u7684\u7279\u5b9a\u90e8\u5206\u3002</p>\n</li>\n</ul>\n<h2 id="heading-framework-example"><span class="anchor-link" id="framework-example"></span>\u6846\u67b6\u793a\u4f8b<a aria-labelledby="heading-framework-example" class="anchor-link-style" href="#framework-example" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u5728 <code>ClassNameGenerator</code> \u5bfc\u5165\u9876\u90e8\u6dfb\u52a0 <code>/* eslint-disable import/first*/</code> \u6765\u89e3\u51b3\u62a5\u9519</p>\n<pre><code class="language-js"><span class="token comment">/* eslint-disable import/first */</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> unstable_ClassNameGenerator <span class="token keyword">as</span> ClassNameGenerator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/utils\'</span><span class="token punctuation">;</span>\n</code></pre>\n<h3 id="heading-next-js"><span class="anchor-link" id="next-js"></span>Next.js<a aria-labelledby="heading-next-js" class="anchor-link-style" href="#next-js" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u5728 <code>/pages/_app.js</code> \u4e2d\u4f7f\u7528 ClassNameGenerator\u3002</p>\n<pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { unstable_ClassNameGenerator as ClassNameGenerator } from \'@mui/material/utils\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">ClassNameGenerator.configure((componentName) => componentName.replace(\'Mui\', \'\'));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import PropTypes from \'prop-types\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import Head from \'next/head\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default function MyApp(props) {\n</span><span class="token prefix unchanged"> </span><span class="token line">  const { Component, pageProps } = props;\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;Component {...pageProps} />\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre>\n<h3 id="heading-create-react-app"><span class="anchor-link" id="create-react-app"></span>\u521b\u5efa React \u5e94\u7528<a aria-labelledby="heading-create-react-app" class="anchor-link-style" href="#create-react-app" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u5728<code>/src/index.js</code> \u4e2d\u4f7f\u7528 ClassNameGenerator</p>\n<pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { unstable_ClassNameGenerator as ClassNameGenerator } from \'@mui/material/utils\';\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">ClassNameGenerator.configure((componentName) => componentName.replace(\'Mui\', \'\'));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import ReactDOM from \'react-dom\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import App from \'./App\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">ReactDOM.render(&lt;App />);</span></span>\n</code></pre>\n<h3 id="heading-gatsby"><span class="anchor-link" id="gatsby"></span>Gatsby<a aria-labelledby="heading-gatsby" class="anchor-link-style" href="#gatsby" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u5728\u6839\u6587\u4ef6\u5939\u4e2d\u7684 <code>gatsby-ssr.js</code> \u6587\u4ef6\u5185\u4f7f\u7528 GlassNameGenerator</p>\n<pre><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { unstable_ClassNameGenerator as ClassNameGenerator } from "@mui/material/utils";\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">ClassNameGenerator.configure((componentName) => componentName.replace(\'Mui\', \'\'));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export const wrapPageElement = ({ element }) => {\n</span><span class="token prefix unchanged"> </span><span class="token line">  return element;\n</span><span class="token prefix unchanged"> </span><span class="token line">};</span></span>\n</code></pre>\n'],toc:[{text:"\u5168\u5c40\u7c7b\u540d\u524d\u7f00",level:2,hash:"global-classname-prefix",children:[]},{text:"\u7ec4\u4ef6\u66f4\u540d",level:2,hash:"component-renaming",children:[]},{text:"\u6ce8\u610f\u4e8b\u9879",level:2,hash:"caveat",children:[]},{text:"\u6846\u67b6\u793a\u4f8b",level:2,hash:"framework-example",children:[{text:"Next.js",level:3,hash:"next-js"},{text:"\u521b\u5efa React \u5e94\u7528",level:3,hash:"create-react-app"},{text:"Gatsby",level:3,hash:"gatsby"}]}],title:"\u7c7b\u540d\u751f\u6210\u5668",headers:{components:[]}}},t={},p={}}}]);