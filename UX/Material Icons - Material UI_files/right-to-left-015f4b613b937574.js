(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[69462],{215162:function(n,a,s){"use strict";s.r(a),s.d(a,{default:function(){return L}});var t,e=s(827378),o=s(494616),p=s(860741),c=s(720325),l=s(267414),i=s(813371),r=s(970827),u=s(40764),d=s(743547),k=s(824246),h=(0,p.Z)({direction:"rtl"}),m=(0,d.Z)({key:"muirtl",stylisPlugins:[r.Ji,i.Z]});var g,y,f,v,b=s(295649),x=s(25778),w=s(974931),S=s(290763),P=s(394898),j=s(597360),Z=(0,S.ZP)("div")((function(n){var a;return{width:"100%",marginTop:null===(a=n.theme)||void 0===a?void 0:a.spacing(6)}})),C=(0,S.ZP)("div")(g||(g=(0,w.Z)(["\n  text-align: left;\n"]))),T=(0,S.ZP)("div")(y||(y=(0,w.Z)(["\n  /* @noflip */\n  text-align: left;\n"]))),R=(0,d.Z)({key:"muirtl",stylisPlugins:[r.Ji,i.Z]}),M=(0,d.Z)({key:"mui"});var I,q={en:{description:"Right-to-left languages such as Arabic, Persian, or Hebrew are supported. To change the direction of MUI components you must follow the following steps.",location:"/docs/data/material/guides/right-to-left/right-to-left.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Right-to-left</h1><p class="description">Right-to-left languages such as Arabic, Persian, or Hebrew are supported. To change the direction of MUI components you must follow the following steps.</p>\n\n<h2 id="heading-steps"><span class="anchor-link" id="steps"></span>Steps<a aria-labelledby="heading-steps" class="anchor-link-style" href="#steps" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-1-html"><span class="anchor-link" id="1-html"></span>1. HTML<a aria-labelledby="heading-1-html" class="anchor-link-style" href="#1-html" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Make sure the <code>dir</code> attribute is set on the <code>html</code> tag, otherwise native components will break:</p>\n<pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">dir</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rtl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>If you need to change the direction of the text at runtime, but React does not control the root HTML element, you may use the JS API:</p>\n<pre><code class="language-js">document<span class="token punctuation">.</span>dir <span class="token operator">=</span> <span class="token string">\'rtl\'</span><span class="token punctuation">;</span>\n</code></pre>\n<p>As an alternative to the above, you can also wrap your application (or part of it) in an element with the <code>dir</code> attribute.\nThis, however, will not work correctly with portaled elements, such as Dialogs, as they will render outside of the element with the <code>dir</code> attribute.</p>\n<p>To fix the portaled components, add an explicit <code>dir</code> attribute to them:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dialog</span></span> <span class="token attr-name">dir</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rtl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyComponent</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dialog</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<h3 id="heading-2-theme"><span class="anchor-link" id="2-theme"></span>2. Theme<a aria-labelledby="heading-2-theme" class="anchor-link-style" href="#2-theme" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Set the direction in your custom theme:</p>\n<pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> createTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">direction</span><span class="token operator">:</span> <span class="token string">\'rtl\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h3 id="heading-3-install-the-rtl-plugin"><span class="anchor-link" id="3-install-the-rtl-plugin"></span>3. Install the rtl plugin<a aria-labelledby="heading-3-install-the-rtl-plugin" class="anchor-link-style" href="#3-install-the-rtl-plugin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>When using either <code>emotion</code> or <code>styled-components</code>, you need <a href="https://github.com/styled-components/stylis-plugin-rtl"><code>stylis-plugin-rtl</code></a> to flip the styles.</p>\n<pre><code class="language-sh">npm install stylis stylis<span class="token operator">-</span>plugin<span class="token operator">-</span>rtl\n</code></pre>\n<blockquote>\n<p><strong>Note</strong>: Only <code>emotion</code> is compatible with version 2 of the plugin. <code>styled-components</code> requires version 1. If you are using <code>styled-components</code> as a <a href="/material-ui/guides/styled-engine/">styled engine</a>, make sure to install the correct version.</p>\n</blockquote>\n<p>In case you are using <code>jss</code> (up to v4) or with the legacy <code>@mui/styles</code> package, you need <a href="https://github.com/alitaheri/jss-rtl"><code>jss-rtl</code></a> to flip the styles.</p>\n<pre><code class="language-sh">npm install jss<span class="token operator">-</span>rtl\n</code></pre>\n<p>Having installed the plugin in your project, MUI components still require it to be loaded by the style engine instance that you use. Find bellow guides on how you can load it.</p>\n<h3 id="heading-4-load-the-rtl-plugin"><span class="anchor-link" id="4-load-the-rtl-plugin"></span>4. Load the rtl plugin<a aria-labelledby="heading-4-load-the-rtl-plugin" class="anchor-link-style" href="#4-load-the-rtl-plugin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><h4>4.1 emotion</h4><p>If you use emotion as your style engine, you should create a new cache instance that uses the <code>stylis-plugin-rtl</code> (the default <code>prefixer</code> plugin must also be included in order to retain vendor prefixing) and provide that on the top of your application tree.\nThe <a href="https://emotion.sh/docs/cache-provider">CacheProvider</a> component enables this:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> rtlPlugin <span class="token keyword">from</span> <span class="token string">\'stylis-plugin-rtl\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CacheProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@emotion/react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> createCache <span class="token keyword">from</span> <span class="token string">\'@emotion/cache\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> prefixer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'stylis\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Create rtl cache</span>\n<span class="token keyword">const</span> cacheRtl <span class="token operator">=</span> <span class="token function">createCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'muirtl\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">stylisPlugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>prefixer<span class="token punctuation">,</span> rtlPlugin<span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token constant">RTL</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CacheProvider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cacheRtl<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CacheProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h4>4.2 styled-components</h4><p>If you use <code>styled-components</code> as your style engine, you can use the <a href="https://styled-components.com/docs/api#stylesheetmanager">StyleSheetManager</a> and provide the stylis-plugin-rtl as an item in the <code>stylisPlugins</code> property:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> StyleSheetManager <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'styled-components\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> rtlPlugin <span class="token keyword">from</span> <span class="token string">\'stylis-plugin-rtl\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token constant">RTL</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyleSheetManager</span></span> <span class="token attr-name">stylisPlugins</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>rtlPlugin<span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StyleSheetManager</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h4>4.3 JSS</h4><p>After installing the plugin in your project, you need to configure the JSS instance to load it.\nThe next step is to make the new JSS instance available to all the components in the component tree.\nThe <a href="/system/styles/api/#stylesprovider"><code>StylesProvider</code></a> component enables this:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> create <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'jss\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> rtl <span class="token keyword">from</span> <span class="token string">\'jss-rtl\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StylesProvider<span class="token punctuation">,</span> jssPreset <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Configure JSS</span>\n<span class="token keyword">const</span> jss <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">jssPreset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>plugins<span class="token punctuation">,</span> <span class="token function">rtl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token constant">RTL</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StylesProvider</span></span> <span class="token attr-name">jss</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>jss<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StylesProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>For more information on the plugin, head to the <a href="https://github.com/alitaheri/jss-rtl">plugin README</a>.\n<strong>Note</strong>: Internally, withStyles is using this JSS plugin when <code>direction: &#39;rtl&#39;</code> is set on the theme.</p>\n<h2 id="heading-demo"><span class="anchor-link" id="demo"></span>Demo<a aria-labelledby="heading-demo" class="anchor-link-style" href="#demo" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><em>Use the direction toggle button on the top right corner to flip the whole documentation</em></p>\n',{demo:"Direction.js"},'<h2 id="heading-opting-out-of-rtl-transformation"><span class="anchor-link" id="opting-out-of-rtl-transformation"></span>Opting out of rtl transformation<a aria-labelledby="heading-opting-out-of-rtl-transformation" class="anchor-link-style" href="#opting-out-of-rtl-transformation" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-emotion-amp-styled-components"><span class="anchor-link" id="emotion-amp-styled-components"></span>emotion &amp; styled-components<a aria-labelledby="heading-emotion-amp-styled-components" class="anchor-link-style" href="#emotion-amp-styled-components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>You have to use the template literal syntax and add the <code>/* @noflip */</code> directive before the rule or property for which you want to disable right-to-left styles.</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> AffectedText <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  text-align: left;\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> UnaffectedText <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  /* @noflip */\n  text-align: left;\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n</code></pre>\n',{demo:"RtlOptOutStylis.js",hideToolbar:!0},'<h3 id="heading-jss"><span class="anchor-link" id="jss"></span>JSS<a aria-labelledby="heading-jss" class="anchor-link-style" href="#jss" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you want to prevent a specific rule-set from being affected by the <code>rtl</code> transformation you can add <code>flip: false</code> at the beginning.</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> useStyles <span class="token operator">=</span> <span class="token function">makeStyles</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token parameter">theme</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">affected</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">unaffected</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">flip</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> defaultTheme <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n'],toc:[{text:"Steps",level:2,hash:"steps",children:[{text:"1. HTML",level:3,hash:"1-html"},{text:"2. Theme",level:3,hash:"2-theme"},{text:"3. Install the rtl plugin",level:3,hash:"3-install-the-rtl-plugin"},{text:"4. Load the rtl plugin",level:3,hash:"4-load-the-rtl-plugin"}]},{text:"Demo",level:2,hash:"demo",children:[]},{text:"Opting out of rtl transformation",level:2,hash:"opting-out-of-rtl-transformation",children:[{text:"emotion &amp; styled-components",level:3,hash:"emotion-amp-styled-components"},{text:"JSS",level:3,hash:"jss"}]}],title:"Right-to-left",headers:{components:[]}},pt:{description:"Idiomas da direita para esquerda como \xe1rabe, persa ou hebraico s\xe3o suportados. Para alterar a dire\xe7\xe3o dos componentes de Material UI, voc\xea deve seguir as etapas a seguir.",location:"/docs/data/material/guides/right-to-left/right-to-left-pt.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Da direita para a esquerda</h1><p class="description">Idiomas da direita para esquerda como \xe1rabe, persa ou hebraico s\xe3o suportados. Para alterar a dire\xe7\xe3o dos componentes de Material UI, voc\xea deve seguir as etapas a seguir.</p>\n\n<h2 id="heading-steps"><span class="anchor-link" id="steps"></span>Passos<a aria-labelledby="heading-steps" class="anchor-link-style" href="#steps" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-1-html"><span class="anchor-link" id="1-html"></span>1. HTML<a aria-labelledby="heading-1-html" class="anchor-link-style" href="#1-html" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Certifique-se de que o atributo <code>dir</code> \xe9 definido no corpo (body), caso contr\xe1rio, os componentes nativos ser\xe3o quebrados:</p>\n<pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">dir</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rtl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>As an alternative to the above, you can also wrap your application in an element with the <code>dir</code> attribute:</p>\n<pre><code class="language-jsx"><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">dir</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rtl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyComponent</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>This can be helpful for creating components to toggle language settings in the live application.</p>\n<h3 id="heading-2-theme"><span class="anchor-link" id="2-theme"></span>2. Tema<a aria-labelledby="heading-2-theme" class="anchor-link-style" href="#2-theme" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Defina a dire\xe7\xe3o no seu tema customizado:</p>\n<pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">direction</span><span class="token operator">:</span> <span class="token string">\'rtl\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h3 id="heading-3-install-the-rtl-plugin"><span class="anchor-link" id="3-install-the-rtl-plugin"></span>3. Instale o plugin rtl<a aria-labelledby="heading-3-install-the-rtl-plugin" class="anchor-link-style" href="#3-install-the-rtl-plugin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Voc\xea precisa deste plugin JSS para inverter os estilos: <a href="https://github.com/alitaheri/jss-rtl">jss-rtl</a>.</p>\n<pre><code class="language-sh">npm install stylis<span class="token operator">-</span>plugin<span class="token operator">-</span>rtl\n</code></pre>\n<blockquote>\n<p><strong>Note</strong>: Only <code>emotion</code> is compatible with version 2 of the plugin. <code>styled-components</code> requires version 1. If you are using <code>styled-components</code> as styled engine, make sure to install the correct version.</p>\n</blockquote>\n<p>Se voc\xea estiver usando <code>emotion</code> ou <code>styled-components</code>, voc\xea precisa deste plugin de estilo para inverter os estilos: <a href="https://github.com/styled-components/stylis-plugin-rtl">stylis-plugin-rtl</a>.</p>\n<pre><code class="language-sh">npm install jss<span class="token operator">-</span>rtl\n</code></pre>\n<p>Tendo instalado o plugin em seu projeto, os componentes do Material UI ainda exigem que ele seja carregado pela inst\xe2ncia do motor de estilo que voc\xea usa. Encontre guias abaixo de como voc\xea pode carreg\xe1-lo.</p>\n<h3 id="heading-4-load-the-rtl-plugin"><span class="anchor-link" id="4-load-the-rtl-plugin"></span>3. Carregando o plugin rtl<a aria-labelledby="heading-4-load-the-rtl-plugin" class="anchor-link-style" href="#4-load-the-rtl-plugin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><h4>3.1 JSS</h4><p>Depois de criar uma nova inst\xe2ncia do JSS com o plugin, voc\xea precisar\xe1 disponibiliz\xe1-la para todos os componentes na \xe1rvore de componentes. O componente <a href="/pt/system/styles/api/#stylesprovider"><code>StylesProvider</code></a> permite isso:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> rtlPlugin <span class="token keyword">from</span> <span class="token string">\'stylis-plugin-rtl\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CacheProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@emotion/react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> createCache <span class="token keyword">from</span> <span class="token string">\'@emotion/cache\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Create rtl cache</span>\n<span class="token keyword">const</span> cacheRtl <span class="token operator">=</span> <span class="token function">createCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'muirtl\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">stylisPlugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>rtlPlugin<span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token constant">RTL</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CacheProvider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cacheRtl<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CacheProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h4>3.2 emotion</h4><p>Se voc\xea usar <code>styled-components</code> como seu motor de estilo, voc\xea pode usar o <a href="https://styled-components.com/docs/api#stylesheetmanager">StyleSheetManager</a> e fornecer a propriedade stylis-plugin-rtl como um item da propriedade <code>stylisPlugins</code>:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> StyleSheetManager <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'styled-components\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> rtlPlugin <span class="token keyword">from</span> <span class="token string">\'stylis-plugin-rtl\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token constant">RTL</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyleSheetManager</span></span> <span class="token attr-name">stylisPlugins</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>rtlPlugin<span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StyleSheetManager</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h4>3.3 styled-components</h4><p>Tendo instalado o plugin em seu projeto, os componentes de Material UI ainda exigem que ele seja carregado pela inst\xe2ncia do jss, conforme descrito abaixo. Depois de criar uma nova inst\xe2ncia do JSS com o plugin, voc\xea precisar\xe1 disponibiliz\xe1-la para todos os componentes na \xe1rvore de componentes. O componente <a href="/pt/system/styles/api/#stylesprovider"><code>StylesProvider</code></a> permite isso:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> create <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'jss\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> rtl <span class="token keyword">from</span> <span class="token string">\'jss-rtl\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StylesProvider<span class="token punctuation">,</span> jssPreset <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Configure JSS</span>\n<span class="token keyword">const</span> jss <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">jssPreset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>plugins<span class="token punctuation">,</span> <span class="token function">rtl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token constant">RTL</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StylesProvider</span></span> <span class="token attr-name">jss</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>jss<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StylesProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>V\xe1 para o <a href="https://github.com/alitaheri/jss-rtl">README do plugin</a> para aprender mais sobre isso. Internamente, withStyles est\xe1 usando este plugin JSS quando <code>dire\xe7\xe3o: &#39;rtl&#39;</code> est\xe1 definido no tema.</p>\n<h2 id="heading-demo"><span class="anchor-link" id="demo"></span>Demonstra\xe7\xe3o<a aria-labelledby="heading-demo" class="anchor-link-style" href="#demo" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><em>Use o bot\xe3o de altern\xe2ncia de dire\xe7\xe3o no canto superior direito para inverter toda a documenta\xe7\xe3o</em></p>\n',{demo:"Direction.js"},'<h2 id="heading-opting-out-of-rtl-transformation"><span class="anchor-link" id="opting-out-of-rtl-transformation"></span>Optando pela transforma\xe7\xe3o do rtl<a aria-labelledby="heading-opting-out-of-rtl-transformation" class="anchor-link-style" href="#opting-out-of-rtl-transformation" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-emotion-amp-styled-components"><span class="anchor-link" id="emotion-amp-styled-components"></span>emotion &amp; styled-components<a aria-labelledby="heading-emotion-amp-styled-components" class="anchor-link-style" href="#emotion-amp-styled-components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Voc\xea precisa a sintaxe de template literal e adicionar a diretiva <code>/* @noflip */</code> antes da regra ou propriedade para a qual voc\xea deseja desativar os estilos da direita para a esquerda.</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> AffectedText <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  text-align: left;\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> UnaffectedText <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  /* @noflip */\n  text-align: left;\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n</code></pre>\n<p>Se voc\xea quiser evitar que um conjunto de regras espec\xedfico seja afetado pela transforma\xe7\xe3o <code>rtl</code>, voc\xea pode adicionar <code>flip: false</code> no inicio.</p>\n<h3 id="heading-jss"><span class="anchor-link" id="jss"></span>JSS<a aria-labelledby="heading-jss" class="anchor-link-style" href="#jss" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Se voc\xea quiser evitar que um conjunto de regras espec\xedfico seja afetado pela transforma\xe7\xe3o <code>rtl</code>, voc\xea pode adicionar <code>flip: false</code> no inicio.</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> useStyles <span class="token operator">=</span> <span class="token function">makeStyles</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token parameter">theme</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">affected</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">unaffected</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">flip</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> defaultTheme <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n'],toc:[{text:"Passos",level:2,hash:"steps",children:[{text:"1. HTML",level:3,hash:"1-html"},{text:"2. Tema",level:3,hash:"2-theme"},{text:"3. Instale o plugin rtl",level:3,hash:"3-install-the-rtl-plugin"},{text:"3. Carregando o plugin rtl",level:3,hash:"4-load-the-rtl-plugin"}]},{text:"Demonstra\xe7\xe3o",level:2,hash:"demo",children:[]},{text:"Optando pela transforma\xe7\xe3o do rtl",level:2,hash:"opting-out-of-rtl-transformation",children:[{text:"emotion &amp; styled-components",level:3,hash:"emotion-amp-styled-components"},{text:"JSS",level:3,hash:"jss"}]}],title:"Da direita para a esquerda",headers:{components:[]}},zh:{description:"\u652f\u6301\u4ece\u53f3\u5230\u5de6\u7684\u8bed\u8a00\uff0c\u5982\u963f\u62c9\u4f2f\u8bed\uff08Arabic\uff09\u3001\u6ce2\u65af\u8bed\uff08Persian \uff09\u6216\u5e0c\u4f2f\u6765\u8bed\uff08Hebrew \uff09\u3002 \u8981\u66f4\u6539 Material UI \u7ec4\u4ef6\u7684\u8bfb\u53d6\u65b9\u5411\uff0c\u60a8\u5fc5\u987b\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\u3002",location:"/docs/data/material/guides/right-to-left/right-to-left-zh.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>\u4ece\u53f3\u5230\u5de6\u8bfb\u53d6</h1><p class="description">\u652f\u6301\u4ece\u53f3\u5230\u5de6\u7684\u8bed\u8a00\uff0c\u5982\u963f\u62c9\u4f2f\u8bed\uff08Arabic\uff09\u3001\u6ce2\u65af\u8bed\uff08Persian \uff09\u6216\u5e0c\u4f2f\u6765\u8bed\uff08Hebrew \uff09\u3002 \u8981\u66f4\u6539 Material UI \u7ec4\u4ef6\u7684\u8bfb\u53d6\u65b9\u5411\uff0c\u60a8\u5fc5\u987b\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\u3002</p>\n\n<h2 id="heading-steps"><span class="anchor-link" id="steps"></span>\u6b65\u9aa4<a aria-labelledby="heading-steps" class="anchor-link-style" href="#steps" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-1-html"><span class="anchor-link" id="1-html"></span>3\u3002 HTML<a aria-labelledby="heading-1-html" class="anchor-link-style" href="#1-html" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u786e\u4fdd\u5728 body \u4e0a\u8bbe\u7f6e\u4e86 <code>dir</code> \u5c5e\u6027\uff0c\u5426\u5219\u672c\u673a\u7ec4\u4ef6\u5c06\u4e2d\u65ad\uff1a</p>\n<pre><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">dir</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rtl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>As an alternative to the above, you can also wrap your application in an element with the <code>dir</code> attribute:</p>\n<pre><code class="language-jsx"><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">dir</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rtl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyComponent</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>This can be helpful for creating components to toggle language settings in the live application.</p>\n<h3 id="heading-2-theme"><span class="anchor-link" id="2-theme"></span>3\u3002 \u5b89\u88c5 rtl \u63d2\u4ef6<a aria-labelledby="heading-2-theme" class="anchor-link-style" href="#2-theme" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u5728\u60a8\u81ea\u5b9a\u4e49\u7684\u4e3b\u9898\u4e2d\u8bbe\u7f6e\u65b9\u5411\uff1a</p>\n<pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">direction</span><span class="token operator">:</span> <span class="token string">\'rtl\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h3 id="heading-3-install-the-rtl-plugin"><span class="anchor-link" id="3-install-the-rtl-plugin"></span>3. 3. 3. \u5b89\u88c5 rtl \u63d2\u4ef6<a aria-labelledby="heading-3-install-the-rtl-plugin" class="anchor-link-style" href="#3-install-the-rtl-plugin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u4f60\u9700\u8981\u8fd9\u4e2a JSS \u63d2\u4ef6\u6765\u7ffb\u8f6c\u6837\u5f0f\uff1a <a href="https://github.com/alitaheri/jss-rtl">jss-rtl</a>\u3002</p>\n<pre><code class="language-sh">npm install stylis<span class="token operator">-</span>plugin<span class="token operator">-</span>rtl\n</code></pre>\n<blockquote>\n<p><strong>Note</strong>: Only <code>emotion</code> is compatible with version 2 of the plugin. <code>styled-components</code> requires version 1. If you are using <code>styled-components</code> as styled engine, make sure to install the correct version. <code>styled-components</code> requires version 1. If you are using <code>styled-components</code> as styled engine, make sure to install the correct version. <code>styled-components</code> requires version 1. If you are using <code>styled-components</code> as a <a href="/zh/material-ui/guides/styled-engine/">styled engine</a>, make sure to install the correct version. <code>styled-components</code> requires version 1. If you are using <code>styled-components</code> as a <a href="/zh/material-ui/guides/styled-engine/">styled engine</a>, make sure to install the correct version. <code>styled-components</code> requires version 1. If you are using <code>styled-components</code> as a <a href="/zh/material-ui/guides/styled-engine/">styled engine</a>, make sure to install the correct version.</p>\n</blockquote>\n<p>\u5982\u679c\u4f60\u6b63\u5728\u4f7f\u7528 <code>emotion</code> \u6216\u8005 <code>styled-components</code>\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u8be5\u63d2\u4ef6\u6765\u7ffb\u8f6c\u6837\u5f0f\uff1a <a href="https://github.com/styled-components/stylis-plugin-rtl">stylis-plugin-rtl</a>\u3002</p>\n<pre><code class="language-sh">npm install jss<span class="token operator">-</span>rtl\n</code></pre>\n<p>\u5728\u4f60\u7684\u9879\u76ee\u4e2d\u5b89\u88c5\u4e86\u8be5\u63d2\u4ef6\u540e\uff0cMaterial UI \u7ec4\u4ef6\u4ecd\u7136\u9700\u8981\u901a\u8fc7\u4f60\u4f7f\u7528\u7684\u6837\u5f0f\u5f15\u64ce\u5b9e\u4f8b\u6765\u52a0\u8f7d\u5b83\u3002 \u4e0b\u9762\u7684\u6307\u5357\u8bb2\u8ff0\u4e86\u5982\u4f55\u8fdb\u884c\u52a0\u8f7d\u3002</p>\n<h3 id="heading-4-load-the-rtl-plugin"><span class="anchor-link" id="4-load-the-rtl-plugin"></span>4. 4. 4. \u52a0\u8f7d rtl \u63d2\u4ef6<a aria-labelledby="heading-4-load-the-rtl-plugin" class="anchor-link-style" href="#4-load-the-rtl-plugin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><h4>3.1 JSS</h4><p>\u5982\u679c\u4f60\u7684\u6837\u5f0f\u5f15\u64ce\u7684\u662f emotion\uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u521b\u5efa\u5e76\u4f7f\u7528 <code>stylis-plugin-rtl</code> \u7684\u65b0\u7f13\u5b58\u5b9e\u4f8b\uff0c\u5e76\u5c06\u5176\u63d0\u4f9b\u5728\u4f60\u5e94\u7528\u7a0b\u5e8f\u6811\u7684\u9876\u90e8\u3002 <a href="https://emotion.sh/docs/cache-provider">CacheProvider</a> \u7ec4\u4ef6\u5b9e\u73b0\u4e86\u8fd9\u4e00\u70b9\uff1a</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> create <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'jss\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> rtl <span class="token keyword">from</span> <span class="token string">\'jss-rtl\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StylesProvider<span class="token punctuation">,</span> jssPreset <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Configure JSS</span>\n<span class="token keyword">const</span> jss <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">jssPreset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>plugins<span class="token punctuation">,</span> <span class="token function">rtl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token constant">RTL</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StylesProvider</span></span> <span class="token attr-name">jss</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>jss<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StylesProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h4>3.2 emotion</h4><p>\u5982\u679c\u4f60\u7684\u6837\u5f0f\u5f15\u64ce\u662f <code>styled-components</code>\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u4f7f\u7528 <a href="https://styled-components.com/docs/api#stylesheetmanager">StyleSheetManager</a>\uff0c\u5e76\u5728 <code>stylisPlugins</code> \u5c5e\u6027\u4e2d\u5c06 stylis-plugin-rtl \u4f5c\u4e3a\u9879\u76ee\uff08item\uff09\u63d0\u4f9b\u3002</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> StyleSheetManager <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'styled-components\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> rtlPlugin <span class="token keyword">from</span> <span class="token string">\'stylis-plugin-rtl\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token constant">RTL</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyleSheetManager</span></span> <span class="token attr-name">stylisPlugins</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>rtlPlugin<span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StyleSheetManager</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h4>3.3 styled-components</h4><p>After installing the plugin in your project, you need to configure the JSS instance to load it. \u4e00\u65e6\u60a8\u901a\u8fc7\u63d2\u4ef6\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 JSS \u5b9e\u4f8b\uff0c\u60a8\u9700\u8981\u63d0\u7ed9\u7ec4\u4ef6\u6811\u4e2d\u7684\u6240\u6709\u7ec4\u4ef6\u3002 The next step is to make the new JSS instance available to all the components in the component tree. \u6211\u4eec\u6709\u4e00\u4e2a <a href="/zh/system/styles/api/#stylesprovider"><code>StylesProvider</code></a> \u7ec4\u4ef6\u6765\u670d\u52a1\u8fd9\u4e2a\u9700\u6c42\uff1a The <a href="/zh/system/styles/api/#stylesprovider"><code>StylesProvider</code></a> component enables this:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> rtlPlugin <span class="token keyword">from</span> <span class="token string">\'stylis-plugin-rtl\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CacheProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@emotion/react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> createCache <span class="token keyword">from</span> <span class="token string">\'@emotion/cache\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// \u521b\u5efa rtl \u7f13\u5b58</span>\n<span class="token keyword">const</span> cacheRtl <span class="token operator">=</span> <span class="token function">createCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'muirtl\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">stylisPlugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>rtlPlugin<span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token constant">RTL</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CacheProvider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cacheRtl<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CacheProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>\u8bf7\u524d\u5f80 <a href="https://github.com/alitaheri/jss-rtl">\u6b64\u63d2\u4ef6\u7684 README</a> \u6765\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002 \u5728\u5185\u90e8\uff0c\u82e5 <code>direction: &#39;rtl&#39;</code> \u4e0a\u5728\u4e3b\u9898\u8bbe\u7f6e\u4e86\uff0cwithStyles \u5219\u4f1a\u4f7f\u7528\u8be5 JSS \u63d2\u4ef6 \u3002</p>\n<h2 id="heading-demo"><span class="anchor-link" id="demo"></span>\u6f14\u793a<a aria-labelledby="heading-demo" class="anchor-link-style" href="#demo" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><em>\u8bf7\u4f7f\u7528\u53f3\u4e0a\u89d2\u7684\u65b9\u5411\u5207\u6362\u6309\u94ae\u6765\u7ffb\u8f6c\u6574\u4e2a\u6587\u6863\u3002</em></p>\n',{demo:"Direction.js"},'<h2 id="heading-opting-out-of-rtl-transformation"><span class="anchor-link" id="opting-out-of-rtl-transformation"></span>\u9009\u62e9\u9000\u51fa rtl \u8f6c\u6362<a aria-labelledby="heading-opting-out-of-rtl-transformation" class="anchor-link-style" href="#opting-out-of-rtl-transformation" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-emotion-amp-styled-components"><span class="anchor-link" id="emotion-amp-styled-components"></span>emotion &amp; styled-components<a aria-labelledby="heading-emotion-amp-styled-components" class="anchor-link-style" href="#emotion-amp-styled-components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u4f60\u5fc5\u987b\u4f7f\u7528\u6a21\u677f\u6587\u5b57\u8bed\u6cd5\uff0c\u5e76\u5728\u4f60\u8981\u7981\u7528\u4ece\u53f3\u5230\u5de6\uff08right-to-left\uff09\u6837\u5f0f\u7684\u89c4\u5219\u6216\u5c5e\u6027\u524d\u6dfb\u52a0 <code>/* @noflip */</code> \u6307\u4ee4\u3002</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> AffectedText <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  text-align: left;\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> UnaffectedText <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  /* @noflip */\n  text-align: left;\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n</code></pre>\n<p>\u82e5\u60a8\u60f3\u907f\u514d\u4e00\u4e2a\u7279\u6b8a\u7684\u7279\u5b9a\u89c4\u5219\u53d7\u5230 <code>rtl</code> \u8f6c\u6362\u7684\u5f71\u54cd\uff0c\u60a8\u53ef\u4ee5\u5728\u6700\u5f00\u59cb\u65f6\u52a0\u4e0a <code>flip: false</code>\u3002</p>\n<h3 id="heading-jss"><span class="anchor-link" id="jss"></span>JSS<a aria-labelledby="heading-jss" class="anchor-link-style" href="#jss" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u82e5\u60a8\u60f3\u907f\u514d\u4e00\u4e2a\u7279\u6b8a\u7684\u7279\u5b9a\u89c4\u5219\u53d7\u5230 <code>rtl</code> \u8f6c\u6362\u7684\u5f71\u54cd\uff0c\u60a8\u53ef\u4ee5\u5728\u6700\u5f00\u59cb\u65f6\u52a0\u4e0a<code>flip: false</code>\u3002</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> useStyles <span class="token operator">=</span> <span class="token function">makeStyles</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token parameter">theme</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">affected</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">unaffected</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">flip</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> defaultTheme <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n'],toc:[{text:"\u6b65\u9aa4",level:2,hash:"steps",children:[{text:"3\u3002 HTML",level:3,hash:"1-html"},{text:"3\u3002 \u5b89\u88c5 rtl \u63d2\u4ef6",level:3,hash:"2-theme"},{text:"3. 3. 3. \u5b89\u88c5 rtl \u63d2\u4ef6",level:3,hash:"3-install-the-rtl-plugin"},{text:"4. 4. 4. \u52a0\u8f7d rtl \u63d2\u4ef6",level:3,hash:"4-load-the-rtl-plugin"}]},{text:"\u6f14\u793a",level:2,hash:"demo",children:[]},{text:"\u9009\u62e9\u9000\u51fa rtl \u8f6c\u6362",level:2,hash:"opting-out-of-rtl-transformation",children:[{text:"emotion &amp; styled-components",level:3,hash:"emotion-amp-styled-components"},{text:"JSS",level:3,hash:"jss"}]}],title:"\u4ece\u53f3\u5230\u5de6\u8bfb\u53d6",headers:{components:[]}}},F={"Direction.js":{module:"./Direction.js",raw:"import * as React from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport { prefixer } from 'stylis';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\n\nconst theme = createTheme({\n  direction: 'rtl', // Both here and <body dir=\"rtl\">\n});\n// Create rtl cache\nconst cacheRtl = createCache({\n  key: 'muirtl',\n  stylisPlugins: [prefixer, rtlPlugin],\n});\n\nexport default function Direction() {\n  return (\n    <CacheProvider value={cacheRtl}>\n      <ThemeProvider theme={theme}>\n        <div dir=\"rtl\">\n          <TextField label=\"Name\" variant=\"standard\" />\n          <input type=\"text\" placeholder=\"Name\" />\n        </div>\n      </ThemeProvider>\n    </CacheProvider>\n  );\n}\n",jsxPreview:'<CacheProvider value={cacheRtl}>\n  <ThemeProvider theme={theme}>\n    <div dir="rtl">\n      <TextField label="Name" variant="standard" />\n      <input type="text" placeholder="Name" />\n    </div>\n  </ThemeProvider>\n</CacheProvider>',moduleTS:"./Direction.js",rawTS:"import * as React from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport { prefixer } from 'stylis';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\n\nconst theme = createTheme({\n  direction: 'rtl', // Both here and <body dir=\"rtl\">\n});\n// Create rtl cache\nconst cacheRtl = createCache({\n  key: 'muirtl',\n  stylisPlugins: [prefixer, rtlPlugin],\n});\n\nexport default function Direction() {\n  return (\n    <CacheProvider value={cacheRtl}>\n      <ThemeProvider theme={theme}>\n        <div dir=\"rtl\">\n          <TextField label=\"Name\" variant=\"standard\" />\n          <input type=\"text\" placeholder=\"Name\" />\n        </div>\n      </ThemeProvider>\n    </CacheProvider>\n  );\n}\n"},"RtlOptOutStylis.js":{module:"./RtlOptOutStylis.js",raw:"import * as React from 'react';\nimport { prefixer } from 'stylis';\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport { styled } from '@mui/material/styles';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\n\nconst Root = styled('div')((props) => ({\n  width: '100%',\n  marginTop: props.theme?.spacing(6),\n}));\n\nconst AffectedText = styled('div')`\n  text-align: left;\n`;\n\nconst UnaffectedText = styled('div')`\n  /* @noflip */\n  text-align: left;\n`;\n\nconst rtlCache = createCache({\n  key: 'muirtl',\n  stylisPlugins: [prefixer, rtlPlugin],\n});\n\nconst ltrCache = createCache({\n  key: 'mui',\n});\n\nexport default function RtlOptOut() {\n  const [rtl, setRtl] = React.useState(false);\n\n  const handleChage = () => {\n    setRtl(!rtl);\n  };\n\n  return (\n    <React.Fragment>\n      <div>\n        <FormControlLabel\n          control={<Switch checked={rtl} onChange={handleChage} />}\n          label=\"RTL\"\n        />\n      </div>\n      <CacheProvider value={rtl ? rtlCache : ltrCache}>\n        <Root {...(rtl ? { dir: 'rtl' } : {})}>\n          <AffectedText>Affected</AffectedText>\n          <UnaffectedText>Unaffected</UnaffectedText>\n        </Root>\n      </CacheProvider>\n    </React.Fragment>\n  );\n}\n",jsxPreview:"<React.Fragment>\n  <div>\n    <FormControlLabel\n      control={<Switch checked={rtl} onChange={handleChage} />}\n      label=\"RTL\"\n    />\n  </div>\n  <CacheProvider value={rtl ? rtlCache : ltrCache}>\n    <Root {...(rtl ? { dir: 'rtl' } : {})}>\n      <AffectedText>Affected</AffectedText>\n      <UnaffectedText>Unaffected</UnaffectedText>\n    </Root>\n  </CacheProvider>\n</React.Fragment>",moduleTS:"./RtlOptOutStylis.js",rawTS:"import * as React from 'react';\nimport { prefixer } from 'stylis';\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport { styled } from '@mui/material/styles';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\n\nconst Root = styled('div')((props) => ({\n  width: '100%',\n  marginTop: props.theme?.spacing(6),\n}));\n\nconst AffectedText = styled('div')`\n  text-align: left;\n`;\n\nconst UnaffectedText = styled('div')`\n  /* @noflip */\n  text-align: left;\n`;\n\nconst rtlCache = createCache({\n  key: 'muirtl',\n  stylisPlugins: [prefixer, rtlPlugin],\n});\n\nconst ltrCache = createCache({\n  key: 'mui',\n});\n\nexport default function RtlOptOut() {\n  const [rtl, setRtl] = React.useState(false);\n\n  const handleChage = () => {\n    setRtl(!rtl);\n  };\n\n  return (\n    <React.Fragment>\n      <div>\n        <FormControlLabel\n          control={<Switch checked={rtl} onChange={handleChage} />}\n          label=\"RTL\"\n        />\n      </div>\n      <CacheProvider value={rtl ? rtlCache : ltrCache}>\n        <Root {...(rtl ? { dir: 'rtl' } : {})}>\n          <AffectedText>Affected</AffectedText>\n          <UnaffectedText>Unaffected</UnaffectedText>\n        </Root>\n      </CacheProvider>\n    </React.Fragment>\n  );\n}\n"}},A={"./Direction.js":function(){return t||(t=(0,k.jsx)(u.C,{value:m,children:(0,k.jsx)(c.Z,{theme:h,children:(0,k.jsxs)("div",{dir:"rtl",children:[(0,k.jsx)(l.Z,{label:"Name",variant:"standard"}),(0,k.jsx)("input",{type:"text",placeholder:"Name"})]})})}))},"./RtlOptOutStylis.js":function(){var n=e.useState(!1),a=(0,x.Z)(n,2),s=a[0],t=a[1];return(0,k.jsxs)(e.Fragment,{children:[(0,k.jsx)("div",{children:(0,k.jsx)(P.Z,{control:(0,k.jsx)(j.Z,{checked:s,onChange:function(){t(!s)}}),label:"RTL"})}),(0,k.jsx)(u.C,{value:s?R:M,children:(0,k.jsxs)(Z,(0,b.Z)((0,b.Z)({},s?{dir:"rtl"}:{}),{},{children:[f||(f=(0,k.jsx)(C,{children:"Affected"})),v||(v=(0,k.jsx)(T,{children:"Unaffected"}))]}))})]})}};function L(){return I||(I=(0,k.jsx)(o.Z,{demos:F,docs:q,demoComponents:A}))}},394898:function(n,a,s){"use strict";s.d(a,{Z:function(){return x}});var t=s(481936),e=s(295649),o=s(957379),p=s(827378),c=s(138944),l=s(47918),i=s(760163),r=s(376811),u=s(326162),d=s(290763),k=s(906205),h=s(892992);function m(n){return(0,h.Z)("MuiFormControlLabel",n)}var g=(0,s(84408).Z)("MuiFormControlLabel",["root","labelPlacementStart","labelPlacementTop","labelPlacementBottom","disabled","label","error"]),y=s(594218),f=s(824246),v=["checked","className","componentsProps","control","disabled","disableTypography","inputRef","label","labelPlacement","name","onChange","value"],b=(0,d.ZP)("label",{name:"MuiFormControlLabel",slot:"Root",overridesResolver:function(n,a){var s=n.ownerState;return[(0,o.Z)({},"& .".concat(g.label),a.label),a.root,a["labelPlacement".concat((0,u.Z)(s.labelPlacement))]]}})((function(n){var a=n.theme,s=n.ownerState;return(0,e.Z)((0,e.Z)((0,e.Z)((0,e.Z)((0,o.Z)({display:"inline-flex",alignItems:"center",cursor:"pointer",verticalAlign:"middle",WebkitTapHighlightColor:"transparent",marginLeft:-11,marginRight:16},"&.".concat(g.disabled),{cursor:"default"}),"start"===s.labelPlacement&&{flexDirection:"row-reverse",marginLeft:16,marginRight:-11}),"top"===s.labelPlacement&&{flexDirection:"column-reverse",marginLeft:16}),"bottom"===s.labelPlacement&&{flexDirection:"column",marginLeft:16}),{},(0,o.Z)({},"& .".concat(g.label),(0,o.Z)({},"&.".concat(g.disabled),{color:a.palette.text.disabled})))})),x=p.forwardRef((function(n,a){var s=(0,k.Z)({props:n,name:"MuiFormControlLabel"}),o=(s.checked,s.className),d=s.componentsProps,h=void 0===d?{}:d,g=s.control,x=s.disabled,w=s.disableTypography,S=(s.inputRef,s.label),P=s.labelPlacement,j=void 0===P?"end":P,Z=(s.name,s.onChange,s.value,(0,t.Z)(s,v)),C=(0,i.Z)(),T=x;"undefined"===typeof T&&"undefined"!==typeof g.props.disabled&&(T=g.props.disabled),"undefined"===typeof T&&C&&(T=C.disabled);var R={disabled:T};["checked","name","onChange","value","inputRef"].forEach((function(n){"undefined"===typeof g.props[n]&&"undefined"!==typeof s[n]&&(R[n]=s[n])}));var M=(0,y.Z)({props:s,muiFormControl:C,states:["error"]}),I=(0,e.Z)((0,e.Z)({},s),{},{disabled:T,labelPlacement:j,error:M.error}),q=function(n){var a=n.classes,s=n.disabled,t=n.labelPlacement,e=n.error,o={root:["root",s&&"disabled","labelPlacement".concat((0,u.Z)(t)),e&&"error"],label:["label",s&&"disabled"]};return(0,l.Z)(o,m,a)}(I),F=S;return null==F||F.type===r.Z||w||(F=(0,f.jsx)(r.Z,(0,e.Z)((0,e.Z)({component:"span",className:q.label},h.typography),{},{children:F}))),(0,f.jsxs)(b,(0,e.Z)((0,e.Z)({className:(0,c.default)(q.root,o),ownerState:I,ref:a},Z),{},{children:[p.cloneElement(g,R),F]}))}))},597360:function(n,a,s){"use strict";var t=s(481936),e=s(957379),o=s(295649),p=s(827378),c=s(138944),l=s(47918),i=s(240120),r=s(326162),u=s(481371),d=s(906205),k=s(290763),h=s(149145),m=s(824246),g=["className","color","edge","size","sx"],y=(0,k.ZP)("span",{name:"MuiSwitch",slot:"Root",overridesResolver:function(n,a){var s=n.ownerState;return[a.root,s.edge&&a["edge".concat((0,r.Z)(s.edge))],a["size".concat((0,r.Z)(s.size))]]}})((function(n){var a,s=n.ownerState;return(0,o.Z)((0,o.Z)((0,o.Z)({display:"inline-flex",width:58,height:38,overflow:"hidden",padding:12,boxSizing:"border-box",position:"relative",flexShrink:0,zIndex:0,verticalAlign:"middle","@media print":{colorAdjust:"exact"}},"start"===s.edge&&{marginLeft:-8}),"end"===s.edge&&{marginRight:-8}),"small"===s.size&&(a={width:40,height:24,padding:7},(0,e.Z)(a,"& .".concat(h.Z.thumb),{width:16,height:16}),(0,e.Z)(a,"& .".concat(h.Z.switchBase),(0,e.Z)({padding:4},"&.".concat(h.Z.checked),{transform:"translateX(16px)"})),a))})),f=(0,k.ZP)(u.Z,{name:"MuiSwitch",slot:"SwitchBase",overridesResolver:function(n,a){var s=n.ownerState;return[a.switchBase,(0,e.Z)({},"& .".concat(h.Z.input),a.input),"default"!==s.color&&a["color".concat((0,r.Z)(s.color))]]}})((function(n){var a,s=n.theme;return a={position:"absolute",top:0,left:0,zIndex:1,color:"light"===s.palette.mode?s.palette.common.white:s.palette.grey[300],transition:s.transitions.create(["left","transform"],{duration:s.transitions.duration.shortest})},(0,e.Z)(a,"&.".concat(h.Z.checked),{transform:"translateX(20px)"}),(0,e.Z)(a,"&.".concat(h.Z.disabled),{color:"light"===s.palette.mode?s.palette.grey[100]:s.palette.grey[600]}),(0,e.Z)(a,"&.".concat(h.Z.checked," + .").concat(h.Z.track),{opacity:.5}),(0,e.Z)(a,"&.".concat(h.Z.disabled," + .").concat(h.Z.track),{opacity:"light"===s.palette.mode?.12:.2}),(0,e.Z)(a,"& .".concat(h.Z.input),{left:"-100%",width:"300%"}),a}),(function(n){var a,s=n.theme,t=n.ownerState;return(0,o.Z)({"&:hover":{backgroundColor:(0,i.Fq)(s.palette.action.active,s.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"default"!==t.color&&(a={},(0,e.Z)(a,"&.".concat(h.Z.checked),(0,e.Z)({color:s.palette[t.color].main,"&:hover":{backgroundColor:(0,i.Fq)(s.palette[t.color].main,s.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&.".concat(h.Z.disabled),{color:"light"===s.palette.mode?(0,i.$n)(s.palette[t.color].main,.62):(0,i._j)(s.palette[t.color].main,.55)})),(0,e.Z)(a,"&.".concat(h.Z.checked," + .").concat(h.Z.track),{backgroundColor:s.palette[t.color].main}),a))})),v=(0,k.ZP)("span",{name:"MuiSwitch",slot:"Track",overridesResolver:function(n,a){return a.track}})((function(n){var a=n.theme;return{height:"100%",width:"100%",borderRadius:7,zIndex:-1,transition:a.transitions.create(["opacity","background-color"],{duration:a.transitions.duration.shortest}),backgroundColor:"light"===a.palette.mode?a.palette.common.black:a.palette.common.white,opacity:"light"===a.palette.mode?.38:.3}})),b=(0,k.ZP)("span",{name:"MuiSwitch",slot:"Thumb",overridesResolver:function(n,a){return a.thumb}})((function(n){return{boxShadow:n.theme.shadows[1],backgroundColor:"currentColor",width:20,height:20,borderRadius:"50%"}})),x=p.forwardRef((function(n,a){var s=(0,d.Z)({props:n,name:"MuiSwitch"}),e=s.className,p=s.color,i=void 0===p?"primary":p,u=s.edge,k=void 0!==u&&u,x=s.size,w=void 0===x?"medium":x,S=s.sx,P=(0,t.Z)(s,g),j=(0,o.Z)((0,o.Z)({},s),{},{color:i,edge:k,size:w}),Z=function(n){var a=n.classes,s=n.edge,t=n.size,e=n.color,p=n.checked,c=n.disabled,i={root:["root",s&&"edge".concat((0,r.Z)(s)),"size".concat((0,r.Z)(t))],switchBase:["switchBase","color".concat((0,r.Z)(e)),p&&"checked",c&&"disabled"],thumb:["thumb"],track:["track"],input:["input"]},u=(0,l.Z)(i,h.H,a);return(0,o.Z)((0,o.Z)({},a),u)}(j),C=(0,m.jsx)(b,{className:Z.thumb,ownerState:j});return(0,m.jsxs)(y,{className:(0,c.default)(Z.root,e),sx:S,ownerState:j,children:[(0,m.jsx)(f,(0,o.Z)((0,o.Z)({type:"checkbox",icon:C,checkedIcon:C,ref:a,ownerState:j},P),{},{classes:(0,o.Z)((0,o.Z)({},Z),{},{root:Z.switchBase})})),(0,m.jsx)(v,{className:Z.track,ownerState:j})]})}));a.Z=x},149145:function(n,a,s){"use strict";s.d(a,{H:function(){return e}});var t=s(892992);function e(n){return(0,t.Z)("MuiSwitch",n)}var o=(0,s(84408).Z)("MuiSwitch",["root","edgeStart","edgeEnd","switchBase","colorPrimary","colorSecondary","sizeSmall","sizeMedium","checked","disabled","input","thumb","track"]);a.Z=o},481371:function(n,a,s){"use strict";s.d(a,{Z:function(){return b}});var t=s(25778),e=s(481936),o=s(295649),p=s(827378),c=s(138944),l=s(47918),i=s(326162),r=s(290763),u=s(781702),d=s(760163),k=s(161980),h=s(892992);function m(n){return(0,h.Z)("PrivateSwitchBase",n)}(0,s(84408).Z)("PrivateSwitchBase",["root","checked","disabled","input","edgeStart","edgeEnd"]);var g=s(824246),y=["autoFocus","checked","checkedIcon","className","defaultChecked","disabled","disableFocusRipple","edge","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"],f=(0,r.ZP)(k.Z)((function(n){var a=n.ownerState;return(0,o.Z)((0,o.Z)({padding:9,borderRadius:"50%"},"start"===a.edge&&{marginLeft:"small"===a.size?-3:-12}),"end"===a.edge&&{marginRight:"small"===a.size?-3:-12})})),v=(0,r.ZP)("input")({cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0,zIndex:1}),b=p.forwardRef((function(n,a){var s=n.autoFocus,p=n.checked,r=n.checkedIcon,k=n.className,h=n.defaultChecked,b=n.disabled,x=n.disableFocusRipple,w=void 0!==x&&x,S=n.edge,P=void 0!==S&&S,j=n.icon,Z=n.id,C=n.inputProps,T=n.inputRef,R=n.name,M=n.onBlur,I=n.onChange,q=n.onFocus,F=n.readOnly,A=n.required,L=n.tabIndex,z=n.type,N=n.value,O=(0,e.Z)(n,y),D=(0,u.Z)({controlled:p,default:Boolean(h),name:"SwitchBase",state:"checked"}),J=(0,t.Z)(D,2),U=J[0],H=J[1],B=(0,d.Z)(),E=b;B&&"undefined"===typeof E&&(E=B.disabled);var _="checkbox"===z||"radio"===z,V=(0,o.Z)((0,o.Z)({},n),{},{checked:U,disabled:E,disableFocusRipple:w,edge:P}),X=function(n){var a=n.classes,s=n.checked,t=n.disabled,e=n.edge,o={root:["root",s&&"checked",t&&"disabled",e&&"edge".concat((0,i.Z)(e))],input:["input"]};return(0,l.Z)(o,m,a)}(V);return(0,g.jsxs)(f,(0,o.Z)((0,o.Z)({component:"span",className:(0,c.default)(X.root,k),centerRipple:!0,focusRipple:!w,disabled:E,tabIndex:null,role:void 0,onFocus:function(n){q&&q(n),B&&B.onFocus&&B.onFocus(n)},onBlur:function(n){M&&M(n),B&&B.onBlur&&B.onBlur(n)},ownerState:V,ref:a},O),{},{children:[(0,g.jsx)(v,(0,o.Z)((0,o.Z)({autoFocus:s,checked:p,defaultChecked:h,className:X.input,disabled:E,id:_&&Z,name:R,onChange:function(n){if(!n.nativeEvent.defaultPrevented){var a=n.target.checked;H(a),I&&I(n,a)}},readOnly:F,ref:T,required:A,ownerState:V,tabIndex:L,type:z},"checkbox"===z&&void 0===N?{}:{value:N}),C)),U?r:j]}))}))},976765:function(n,a,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/guides/right-to-left",function(){return s(215162)}])}},function(n){n.O(0,[64631,31194,72773,31659,16950,37141,91895,63463,61980,45387,892,2798,30170,20365,60630,25747,18049,26035,85244,67414,90478,30016,94616,49774,92888,40179],(function(){return a=976765,n(n.s=a);var a}));var a=n.O();_N_E=a}]);