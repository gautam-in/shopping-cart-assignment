{"version":3,"file":"static/js/244.24f81739.chunk.js","mappings":"wKAaA,MAVA,YAA2C,IAAzBA,EAAwB,EAAxBA,KAAwB,IAAlBC,QAAAA,OAAkB,MAAR,KAAQ,EACxC,OACE,gBAAKC,UAAU,cAAf,UACE,mBAAQA,UAAU,aAAaD,QAAS,kBAAMA,GAAWA,KAAzD,SACGD,Q,4ICLIG,EAAgB,SAACC,GAAD,MAAS,CACpCC,KAAMC,EAAAA,EAAAA,YACNC,QAASH,IAGEI,EAAgB,iBAAO,CAClCH,KAAMC,EAAAA,EAAAA,eAGKG,EAAkB,iBAAO,CACpCJ,KAAMC,EAAAA,EAAAA,aAGKI,EAAc,iBAAO,CAChCL,KAAMC,EAAAA,EAAAA,gB,yIC4BR,IAQA,GAAeK,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KARC,SAACC,GAAD,MAAY,CAClCC,aAAcD,EAAME,WAGK,SAACC,GAAD,MAAe,CACxCC,YAAa,kBAAMD,GAASR,EAAAA,EAAAA,YAG9B,EA7CA,SAAuBU,GACrB,IAAQD,EAAwCC,EAAxCD,YAAaH,EAA2BI,EAA3BJ,aAAcK,EAAaD,EAAbC,SAC3BC,EAAeN,EAAfM,WAMR,OAJAC,EAAAA,EAAAA,YAAU,WACRJ,MACC,KAGD,iBAAKf,UAAU,oBAAf,UACGkB,GACCA,EAAWE,KAAI,SAACC,GAAD,OACb,SAAC,KAAD,CACErB,UAAS,uBACPqB,EAAKnB,KAAOU,EAAaU,WAAa,iBAAmB,MAE3DC,GAAE,WAEFxB,QAAS,SAACyB,GAAD,OAAOP,EAASI,EAAKnB,GAAIsB,IANpC,SAQGH,EAAKI,MAHDJ,EAAKnB,QAMhB,mBACEF,UAAU,sBACV0B,SAAU,SAACC,GAAD,OAAWV,EAASU,EAAMC,OAAOC,QAC3CA,MAAOjB,EAAaU,WAHtB,SAKGJ,GACCA,EAAWE,KAAI,SAACC,GAAD,OACb,oBAAsBQ,MAAOR,EAAKnB,GAAlC,cAAwCmB,EAAKI,KAA7C,MAAaJ,EAAKnB,e,UCV9B,MAvBA,YAA8D,IAAvCuB,EAAsC,EAAtCA,KAAMK,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAIhD,OACE,iBAAKjC,UAAU,iBAAf,WACE,wBAAKyB,KACL,gBAAKzB,UAAU,sBAAf,UACE,gBACEA,UAAU,cACVkC,IAAG,UAAKC,IAAL,OAA8BL,GACjCM,IAAKX,OAGT,iBAAKzB,UAAU,YAAf,cAA6B+B,EAA7B,QACA,iBAAK/B,UAAU,mBAAf,WACE,iBAAKA,UAAU,YAAf,cAA6BgC,EAA7B,QACA,SAAC,IAAD,CAAQlC,KAAK,MAAMC,QAhBN,WACjBkC,cCoCJ,MArCA,SAAiBjB,GACf,IAAQf,EACNe,EADMf,cAAeoC,EACrBrB,EADqBqB,eAAgBC,EACrCtB,EADqCsB,MAAOC,EAC5CvB,EAD4CuB,aAAcC,EAC1DxB,EAD0DwB,eAgB5D,OAJArB,EAAAA,EAAAA,YAAU,WACRqB,MACC,KAGD,iBAAKxC,UAAU,oBAAf,WACE,SAAC,EAAD,CAAeiB,SAfC,SAACf,EAAIsB,GACvBvB,EAAcC,IAc0BoC,MAAOA,KAC7C,gBAAKtC,UAAU,eAAf,SACGuC,GACCA,EAAanB,KAAI,SAACqB,GAAD,OACf,SAAC,EAAD,CAEEhB,KAAMgB,EAAIhB,KACVK,OAAQW,EAAIC,SACZV,MAAOS,EAAIT,MACXD,KAAMU,EAAIE,YACVV,QAAS,kBArBEW,EAqBkBH,GApB/BI,SAAW,OACnBR,EAAeO,GAFK,IAACA,IAgBNH,EAAIvC,aCJvB,GAJyBO,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAZT,SAACC,GAAD,MAAY,CAClCW,WAAYX,EAAME,OAAOS,WACzBwB,YAAanC,EAAME,OAAOkC,SAC1BR,aAAc5B,EAAME,OAAOmC,qBAGF,SAAClC,GAAD,MAAe,CACxCb,cAAe,SAACC,GAAD,OAAQY,GAASb,EAAAA,EAAAA,IAAcC,KAC9CmC,eAAgB,SAACY,GAAD,OAAUnC,GAASoC,EAAAA,EAAAA,IAASD,KAC5CT,eAAgB,kBAAM1B,GAASN,EAAAA,EAAAA,YAGRC,CACvB0C","sources":["Component/Button/button.component.jsx","Redux/CategoryReducer/cate-action.js","Component/Navigation/navigation.component.jsx","Component/ProductCard/productcard.component.jsx","Screen/Product/product.screen.jsx","Screen/Product/product.container.js"],"sourcesContent":["import React from \"react\";\nimport \"./button.styles.scss\";\n\nfunction Button({ text, onClick = null }) {\n  return (\n    <div className=\"button-cont\">\n      <button className=\"button-prm\" onClick={() => onClick && onClick()}>\n        {text}\n      </button>\n    </div>\n  );\n}\n\nexport default Button;\n","import categoryTypes from \"./cate-actiontypes\";\n\nexport const setCategoryId = (id) => ({\n  type: categoryTypes.CATEGORY_ID,\n  payload: id,\n});\n\nexport const getCategories = () => ({\n  type: categoryTypes.GET_CATEGORY,\n});\n\nexport const getBannerOffers = () => ({\n  type: categoryTypes.GET_OFFERS,\n});\n\nexport const getProducts = () => ({\n  type: categoryTypes.GET_PRODUCTS,\n});\n","import React, { useEffect, useState } from \"react\";\nimport \"./navigation.styles.scss\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { getCategories } from \"../../Redux/CategoryReducer/cate-action\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavigationBar(props) {\n  const { getCategory, categoryList, category } = props;\n  const { categories } = categoryList;\n\n  useEffect(() => {\n    getCategory();\n  }, []);\n\n  return (\n    <div className=\"navbar-categories\">\n      {categories &&\n        categories.map((cate) => (\n          <Link\n            className={`category-bar ${\n              cate.id === categoryList.categoryId ? \"activeCategory\" : null\n            }`}\n            to={`/product`}\n            key={cate.id}\n            onClick={(e) => category(cate.id, e)}\n          >\n            {cate.name}\n          </Link>\n        ))}\n      <select\n        className=\"selector-categories\"\n        onChange={(event) => category(event.target.value)}\n        value={categoryList.categoryId}\n      >\n        {categories &&\n          categories.map((cate) => (\n            <option key={cate.id} value={cate.id}> {cate.name} </option>\n          ))}\n      </select>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  categoryList: state.cateId,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCategory: () => dispatch(getCategories()),\n});\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(\n  NavigationBar\n);\n","import React from \"react\";\nimport \"./productcard.styles.scss\";\nimport Button from \"../Button/button.component\";\n\nfunction ProductCard({ name, imgURL, desc, price, additem }) {\n  const onClickBuy = () => {\n    additem();\n  };\n  return (\n    <div className=\"card-container\">\n      <h3>{name}</h3>\n      <div className=\"thumbnail-container\">\n        <img\n          className=\"product-img\"\n          src={`${process.env.PUBLIC_URL}${imgURL}`}\n          alt={name}\n        />\n      </div>\n      <div className=\"card-desc\"> {desc} </div>\n      <div className=\"footer-container\">\n        <div className=\"price-tag\"> {price} </div>\n        <Button text=\"Buy\" onClick={onClickBuy} />\n      </div>\n    </div>\n  );\n}\n\nexport default ProductCard;\n","import React, { useEffect } from \"react\";\nimport NavigationBar from \"../../Component/Navigation/navigation.component\";\nimport ProductCard from \"../../Component/ProductCard/productcard.component\";\nimport \"./product.styles.scss\";\n\nfunction Product(props) {\n  const { setCategoryId, addItemsToCart, match, filteredList, getProductList } =\n    props;\n\n  const setCategory = (id, e) => {\n    setCategoryId(id);\n  };\n\n  const addItemToCart = (product) => {\n    product.quantity = 1;\n    addItemsToCart(product);\n  };\n\n  useEffect(() => {\n    getProductList();\n  }, []);\n\n  return (\n    <div className=\"product-container\">\n      <NavigationBar category={setCategory} match={match} />\n      <div className=\"product-card\">\n        {filteredList &&\n          filteredList.map((pro) => (\n            <ProductCard\n              key={pro.id}\n              name={pro.name}\n              imgURL={pro.imageURL}\n              price={pro.price}\n              desc={pro.description}\n              additem={() => addItemToCart(pro)}\n            />\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Product;\n","import { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { buyItems } from \"../../Redux/CartReducer/cart-action\";\nimport {\n  setCategoryId,\n  getProducts,\n} from \"../../Redux/CategoryReducer/cate-action\";\nimport Product from \"./product.screen\";\n\nconst mapStateToProps = (state) => ({\n  categoryId: state.cateId.categoryId,\n  productList: state.cateId.products,\n  filteredList: state.cateId.filteredProducts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCategoryId: (id) => dispatch(setCategoryId(id)),\n  addItemsToCart: (item) => dispatch(buyItems(item)),\n  getProductList: () => dispatch(getProducts()),\n});\n\nconst ProductContainer = compose(connect(mapStateToProps, mapDispatchToProps))(\n  Product\n);\n\nexport default ProductContainer;\n"],"names":["text","onClick","className","setCategoryId","id","type","categoryTypes","payload","getCategories","getBannerOffers","getProducts","compose","connect","state","categoryList","cateId","dispatch","getCategory","props","category","categories","useEffect","map","cate","categoryId","to","e","name","onChange","event","target","value","imgURL","desc","price","additem","src","process","alt","addItemsToCart","match","filteredList","getProductList","pro","imageURL","description","product","quantity","productList","products","filteredProducts","item","buyItems","Product"],"sourceRoot":""}