// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CategoriesMenu component should match snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <aside
        class="categories-menu-container"
      >
        <div
          class="category-menu-item"
          role="button"
          tabindex="0"
        >
          Beverages
        </div>
        <div
          class="category-menu-item"
          role="button"
          tabindex="0"
        >
          Bakery Cakes and Dairy
        </div>
        <div
          class="category-menu-item"
          role="button"
          tabindex="0"
        >
          Beauty and Hygiene
        </div>
      </aside>
      <div
        class="categories-menu-select-drop-down css-b62m3t-container"
      >
        <span
          class="css-1f43avz-a11yText-A11yText"
          id="react-select-2-live-region"
        />
        <span
          aria-atomic="false"
          aria-live="polite"
          aria-relevant="additions text"
          class="css-1f43avz-a11yText-A11yText"
        />
        <div
          class=" css-j5toe4-control"
        >
          <div
            class=" css-1knrnc3-ValueContainer"
          >
            <div
              class=" css-1njyful-Placeholder"
              id="react-select-2-placeholder"
            >
              Select category
            </div>
            <div
              class=" css-6j8wv5-Input"
              data-value=""
            >
              <input
                aria-autocomplete="list"
                aria-describedby="react-select-2-placeholder"
                aria-expanded="false"
                aria-haspopup="true"
                autocapitalize="none"
                autocomplete="off"
                autocorrect="off"
                class=""
                id="react-select-2-input"
                role="combobox"
                spellcheck="false"
                style="opacity: 1; width: 100%; grid-area: 1 / 2; min-width: 2px; border: 0px; margin: 0px; outline: 0; padding: 0px;"
                tabindex="0"
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            class=" css-1hb7zxy-IndicatorsContainer"
          >
            <span
              class=" css-1xjgjl1-IndicatorSeparator"
            />
            <div
              aria-hidden="true"
              class=" css-ksczov-DropdownIndicator"
            >
              <svg
                aria-hidden="true"
                class="css-tj5bde-Svg"
                focusable="false"
                height="20"
                viewBox="0 0 20 20"
                width="20"
              >
                <path
                  d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                />
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <aside
      class="categories-menu-container"
    >
      <div
        class="category-menu-item"
        role="button"
        tabindex="0"
      >
        Beverages
      </div>
      <div
        class="category-menu-item"
        role="button"
        tabindex="0"
      >
        Bakery Cakes and Dairy
      </div>
      <div
        class="category-menu-item"
        role="button"
        tabindex="0"
      >
        Beauty and Hygiene
      </div>
    </aside>
    <div
      class="categories-menu-select-drop-down css-b62m3t-container"
    >
      <span
        class="css-1f43avz-a11yText-A11yText"
        id="react-select-2-live-region"
      />
      <span
        aria-atomic="false"
        aria-live="polite"
        aria-relevant="additions text"
        class="css-1f43avz-a11yText-A11yText"
      />
      <div
        class=" css-j5toe4-control"
      >
        <div
          class=" css-1knrnc3-ValueContainer"
        >
          <div
            class=" css-1njyful-Placeholder"
            id="react-select-2-placeholder"
          >
            Select category
          </div>
          <div
            class=" css-6j8wv5-Input"
            data-value=""
          >
            <input
              aria-autocomplete="list"
              aria-describedby="react-select-2-placeholder"
              aria-expanded="false"
              aria-haspopup="true"
              autocapitalize="none"
              autocomplete="off"
              autocorrect="off"
              class=""
              id="react-select-2-input"
              role="combobox"
              spellcheck="false"
              style="opacity: 1; width: 100%; grid-area: 1 / 2; min-width: 2px; border: 0px; margin: 0px; outline: 0; padding: 0px;"
              tabindex="0"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class=" css-1hb7zxy-IndicatorsContainer"
        >
          <span
            class=" css-1xjgjl1-IndicatorSeparator"
          />
          <div
            aria-hidden="true"
            class=" css-ksczov-DropdownIndicator"
          >
            <svg
              aria-hidden="true"
              class="css-tj5bde-Svg"
              focusable="false"
              height="20"
              viewBox="0 0 20 20"
              width="20"
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
